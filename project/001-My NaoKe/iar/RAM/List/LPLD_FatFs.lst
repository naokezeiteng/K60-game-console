###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        26/Dec/2018  16:14:10
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\app\LPLD_FatFs.c
#    Command line =  
#        "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\app\LPLD_FatFs.c" -D
#        LPLD_K60 -lCN "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\RAM\List\" -lB "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\RAM\List\" -o "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\RAM\Obj\" --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\..\app\" -I
#        "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\..\..\..\lib\CPU\" -I
#        "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\..\..\..\lib\common\"
#        -I "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\..\..\..\lib\LPLD\"
#        -I "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\..\..\..\lib\FatFs\"
#        -I "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\USB\common\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\USB\driver\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\2019.IAR\project\(FatFS
#        SDHC)LPLD_FatFs\iar\..\..\..\lib\USB\class\" -Ol -I "D:\Embedded
#        Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\RAM\List\LPLD_FatFs.lst
#    Object file  =  
#        D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\iar\RAM\Obj\LPLD_FatFs.o
#
###############################################################################

D:\2019.IAR\project\(FatFS SDHC)LPLD_FatFs\app\LPLD_FatFs.c
      1          /**
      2           * --------------基于"拉普兰德K60底层库V3"的工程（LPLD_FatFs）-----------------
      3           * @file LPLD_FatFs.c
      4           * @version 0.1
      5           * @date 2013-9-29
      6           * @brief 利用SDHC+FatFs文件系统，对SD卡上的文件进行读写。
      7           *
      8           * 版权所有:北京拉普兰德电子技术有限公司
      9           * http://www.lpld.cn
     10           * mail:support@lpld.cn
     11           * 硬件平台:  LPLD K60 Card / LPLD K60 Nano
     12           *
     13           * 本工程基于"拉普兰德K60底层库V3"开发，
     14           * 所有开源代码均在"lib"文件夹下，用户不必更改该目录下代码，
     15           * 所有用户工程需保存在"project"文件夹下，以工程名定义文件夹名，
     16           * 底层库使用方法见相关文档。 
     17           *
     18           */
     19          #include "common.h"
     20          
     21          /****************************************
     22           说明：
     23             *将MicroSD卡插入到K60核心板的SD卡插槽。
     24             *将MiniUSB线插入RUSH Kinetis开发板的USB
     25              插座，并连接至电脑USB接口。
     26             *使用串口调试助手波特率设置为115200
     27             *使用串口调试助手查看运行结果
     28             *如果运行错误，建议在PC上先格式化SD卡再
     29              插入到核心板上。或者更换SDHC大容量卡。
     30           ****************************************/
     31          
     32          // 打印文件返回代码

   \                                 In section .text, align 2, keep-with-next
     33          void die(FRESULT rc)
     34          {
   \                     die: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     35            printf("错误代码 rc=%u.\n", rc);
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x0001             MOVS     R1,R0
   \   00000006   0x....             LDR.N    R0,??DataTable2
   \   00000008   0x.... 0x....      BL       printf
     36            for (;;) ;
   \                     ??die_0: (+1)
   \   0000000C   0xE7FE             B.N      ??die_0
     37          }
     38          // 用户自定义的为FatFs系统提供实时时间的函数

   \                                 In section .text, align 2, keep-with-next
     39          DWORD get_fattime (void)
     40          {
     41            return ((DWORD)(2013 - 1980) << 25)	//2013年
     42                 | ((DWORD)3 << 21)               //3月
     43                 | ((DWORD)15 << 16)              //15日
     44                 | ((DWORD)0 << 11)
     45                 | ((DWORD)0 << 5)
     46                 | ((DWORD)0 >> 1);
   \                     get_fattime: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2_1  ;; 0x426f0000
   \   00000002   0x4770             BX       LR               ;; return
     47          }
     48          
     49          /********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     50          void main (void)
     51          {
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xF5AD 0x6D9E      SUB      SP,SP,#+1264
     52            uint16 i;
     53            // 以下变量定义均采用FatFs文件系统变量类型
     54            FRESULT rc;			//结果代码 
     55            FATFS fatfs;			// 文件系统对象 
     56            FIL fil;			// 文件对象 
     57            UINT bw, br;
     58            BYTE buff[128];
     59            
     60            // 注册一个磁盘工作区 
     61            f_mount(0, &fatfs);		
   \   00000006   0xA9AD             ADD      R1,SP,#+692
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       f_mount
     62            //创建一个新的txt文档
     63            printf("新建一个文件 (LPLD_FatFs.TXT).\n");
   \   0000000E   0x....             LDR.N    R0,??DataTable2_2
   \   00000010   0x.... 0x....      BL       printf
     64            rc = f_open(&fil, "0:/LPLD_FatFs.TXT", FA_WRITE | FA_CREATE_ALWAYS);
   \   00000014   0x220A             MOVS     R2,#+10
   \   00000016   0x....             LDR.N    R1,??DataTable2_3
   \   00000018   0xA822             ADD      R0,SP,#+136
   \   0000001A   0x.... 0x....      BL       f_open
     65            if (rc) die(rc);
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD002             BEQ.N    ??main_0
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       die
     66            
     67            //向新创建的文档中写入"Hello LPLD!"并换行
     68            printf("写入文本数据. (Hello LPLD!)\n");
   \                     ??main_0: (+1)
   \   0000002A   0x....             LDR.N    R0,??DataTable2_4
   \   0000002C   0x.... 0x....      BL       printf
     69            rc = f_write(&fil, "Hello LPLD!\r\n", 13, &bw);
   \   00000030   0xAB01             ADD      R3,SP,#+4
   \   00000032   0x220D             MOVS     R2,#+13
   \   00000034   0x....             LDR.N    R1,??DataTable2_5
   \   00000036   0xA822             ADD      R0,SP,#+136
   \   00000038   0x.... 0x....      BL       f_write
     70            if (rc) die(rc);
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x2800             CMP      R0,#+0
   \   00000040   0xD002             BEQ.N    ??main_1
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       die
     71            printf("共写入 %u Bytes.\n", bw);
   \                     ??main_1: (+1)
   \   00000048   0x9901             LDR      R1,[SP, #+4]
   \   0000004A   0x....             LDR.N    R0,??DataTable2_6
   \   0000004C   0x.... 0x....      BL       printf
     72            
     73            //关闭新建的文件
     74            printf("关闭文件.\n\n");
   \   00000050   0x....             LDR.N    R0,??DataTable2_7
   \   00000052   0x.... 0x....      BL       printf
     75            rc = f_close(&fil);
   \   00000056   0xA822             ADD      R0,SP,#+136
   \   00000058   0x.... 0x....      BL       f_close
     76            if (rc) die(rc);
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD002             BEQ.N    ??main_2
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x.... 0x....      BL       die
     77            
     78            //打开刚才新建的文件
     79            printf("打开一个文件 (LPLD_FatFs.TXT).\n");
   \                     ??main_2: (+1)
   \   00000068   0x....             LDR.N    R0,??DataTable2_8
   \   0000006A   0x.... 0x....      BL       printf
     80            rc = f_open(&fil, "0:/LPLD_FatFs.TXT", FA_READ);
   \   0000006E   0x2201             MOVS     R2,#+1
   \   00000070   0x....             LDR.N    R1,??DataTable2_3
   \   00000072   0xA822             ADD      R0,SP,#+136
   \   00000074   0x.... 0x....      BL       f_open
     81            if (rc) die(rc);
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD002             BEQ.N    ??main_3
   \   0000007E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000080   0x.... 0x....      BL       die
     82            
     83            //打印出文件内的内容
     84            printf("打印此文件内容.\n");
   \                     ??main_3: (+1)
   \   00000084   0x....             LDR.N    R0,??DataTable2_9
   \   00000086   0x.... 0x....      BL       printf
     85            for (;;) 
     86            {
     87              rc = f_read(&fil, buff, sizeof(buff), &br);	// 读取文件的一块 
   \                     ??main_4: (+1)
   \   0000008A   0xAB00             ADD      R3,SP,#+0
   \   0000008C   0x2280             MOVS     R2,#+128
   \   0000008E   0xA902             ADD      R1,SP,#+8
   \   00000090   0xA822             ADD      R0,SP,#+136
   \   00000092   0x.... 0x....      BL       f_read
     88              if (rc || !br) break;			// 错误或读取完毕 
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD102             BNE.N    ??main_5
   \   0000009C   0x9900             LDR      R1,[SP, #+0]
   \   0000009E   0x2900             CMP      R1,#+0
   \   000000A0   0xD115             BNE.N    ??main_6
     89              for (i = 0; i < br; i++)		        // 输出读取的字节数据 
     90                LPLD_UART_PutChar(TERM_PORT, buff[i]);
     91            }
     92            if (rc) die(rc);
   \                     ??main_5: (+1)
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD002             BEQ.N    ??main_7
   \   000000A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AA   0x.... 0x....      BL       die
     93            
     94            //关闭文件
     95            printf("\n关闭文件.\n");
   \                     ??main_7: (+1)
   \   000000AE   0x....             LDR.N    R0,??DataTable2_10
   \   000000B0   0x.... 0x....      BL       printf
     96            rc = f_close(&fil);
   \   000000B4   0xA822             ADD      R0,SP,#+136
   \   000000B6   0x.... 0x....      BL       f_close
     97            if (rc) die(rc);
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0x2800             CMP      R0,#+0
   \   000000BE   0xD002             BEQ.N    ??main_8
   \   000000C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C2   0x.... 0x....      BL       die
     98            
     99            printf("文件系统测试完毕.\n");
   \                     ??main_8: (+1)
   \   000000C6   0x....             LDR.N    R0,??DataTable2_11
   \   000000C8   0x.... 0x....      BL       printf
    100          
    101            for (;;) 
   \                     ??main_9: (+1)
   \   000000CC   0xE7FE             B.N      ??main_9
   \                     ??main_6: (+1)
   \   000000CE   0x2400             MOVS     R4,#+0
   \                     ??main_10: (+1)
   \   000000D0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D2   0x9800             LDR      R0,[SP, #+0]
   \   000000D4   0x4284             CMP      R4,R0
   \   000000D6   0xD2D8             BCS.N    ??main_4
   \   000000D8   0xA802             ADD      R0,SP,#+8
   \   000000DA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000DC   0x5621             LDRSB    R1,[R4, R0]
   \   000000DE   0xB249             SXTB     R1,R1            ;; SignExt  R1,R1,#+24,#+24
   \   000000E0   0x....             LDR.N    R0,??DataTable2_12  ;; 0x400eb000
   \   000000E2   0x.... 0x....      BL       LPLD_UART_PutChar
   \   000000E6   0x1C64             ADDS     R4,R4,#+1
   \   000000E8   0xE7F2             B.N      ??main_10
    102            {
    103            }
    104            
    105          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x426F0000         DC32     0x426f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x400EB000         DC32     0x400eb000

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0xB4 0xED          DC8 "\264\355\316\363\264\372\302\353 rc=%u.\012"
   \              0xCE 0xF3    
   \              0xB4 0xFA    
   \              0xC2 0xEB    
   \              0x20 0x72    
   \              0x63 0x3D    
   \              0x25 0x75    
   \              0x2E 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0xD0 0xC2          DC8 "\320\302\275\250\322\273\270\366\316\304\274\376 (LPLD_FatFs.TXT).\012"
   \              0xBD 0xA8    
   \              0xD2 0xBB    
   \              0xB8 0xF6    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \              0x20 0x28    
   \              0x4C 0x50    
   \              0x4C 0x44    
   \              0x5F 0x46    
   \              0x61 0x74    
   \              0x46 0x73    
   \              0x2E 0x54    
   \              0x58 0x54    
   \              0x29 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x30 0x3A          DC8 "0:/LPLD_FatFs.TXT"
   \              0x2F 0x4C    
   \              0x50 0x4C    
   \              0x44 0x5F    
   \              0x46 0x61    
   \              0x74 0x46    
   \              0x73 0x2E    
   \              0x54 0x58    
   \              0x54 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0xD0 0xB4          DC8 "\320\264\310\353\316\304\261\276\312\375\276\335. (Hello LPLD!)\012"
   \              0xC8 0xEB    
   \              0xCE 0xC4    
   \              0xB1 0xBE    
   \              0xCA 0xFD    
   \              0xBE 0xDD    
   \              0x2E 0x20    
   \              0x28 0x48    
   \              0x65 0x6C    
   \              0x6C 0x6F    
   \              0x20 0x4C    
   \              0x50 0x4C    
   \              0x44 0x21    
   \              0x29 0x0A    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x48 0x65          DC8 "Hello LPLD!\015\012"
   \              0x6C 0x6C    
   \              0x6F 0x20    
   \              0x4C 0x50    
   \              0x4C 0x44    
   \              0x21 0x0D    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0xB9 0xB2          DC8 "\271\262\320\264\310\353 %u Bytes.\012"
   \              0xD0 0xB4    
   \              0xC8 0xEB    
   \              0x20 0x25    
   \              0x75 0x20    
   \              0x42 0x79    
   \              0x74 0x65    
   \              0x73 0x2E    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0xB9 0xD8          DC8 "\271\330\261\325\316\304\274\376.\012\012"
   \              0xB1 0xD5    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \              0x2E 0x0A    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0xB4 0xF2          DC8 "\264\362\277\252\322\273\270\366\316\304\274\376 (LPLD_FatFs.TXT).\012"
   \              0xBF 0xAA    
   \              0xD2 0xBB    
   \              0xB8 0xF6    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \              0x20 0x28    
   \              0x4C 0x50    
   \              0x4C 0x44    
   \              0x5F 0x46    
   \              0x61 0x74    
   \              0x46 0x73    
   \              0x2E 0x54    
   \              0x58 0x54    
   \              0x29 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0xB4 0xF2          DC8 "\264\362\323\241\264\313\316\304\274\376\304\332\310\335.\012"
   \              0xD3 0xA1    
   \              0xB4 0xCB    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \              0xC4 0xDA    
   \              0xC8 0xDD    
   \              0x2E 0x0A    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0A 0xB9          DC8 "\012\271\330\261\325\316\304\274\376.\012"
   \              0xD8 0xB1    
   \              0xD5 0xCE    
   \              0xC4 0xBC    
   \              0xFE 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0xCE 0xC4          DC8 "\316\304\274\376\317\265\315\263\262\342\312\324\315\352\261\317.\012"
   \              0xBC 0xFE    
   \              0xCF 0xB5    
   \              0xCD 0xB3    
   \              0xB2 0xE2    
   \              0xCA 0xD4    
   \              0xCD 0xEA    
   \              0xB1 0xCF    
   \              0x2E 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   die
         8   -> printf
       0   get_fattime
    1272   main
      1272   -> LPLD_UART_PutChar
      1272   -> die
      1272   -> f_close
      1272   -> f_mount
      1272   -> f_open
      1272   -> f_read
      1272   -> f_write
      1272   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
      20  ?_0
      32  ?_1
      20  ?_10
      20  ?_2
      32  ?_3
      16  ?_4
      20  ?_5
      12  ?_6
      32  ?_7
      20  ?_8
      12  ?_9
      14  die
       4  get_fattime
     234  main

 
 236 bytes in section .rodata
 304 bytes in section .text
 
 304 bytes of CODE  memory
 236 bytes of CONST memory

Errors: none
Warnings: none

###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        14/May/2019  18:35:35
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\2019.IAR\project\001-My NaoKe\app\saolei.c
#    Command line =  
#        "D:\2019.IAR\project\001-My NaoKe\app\saolei.c" -D LPLD_K60 -lCN
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\" -lB
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\" -o
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\app\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\CPU\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\common\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\FatFs\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\common\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\driver\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\class\" -Ol -I
#        "D:\Embedded Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\saolei.lst
#    Object file  =  D:\2019.IAR\project\001-My NaoKe\iar\FLASH\Obj\saolei.o
#
###############################################################################

D:\2019.IAR\project\001-My NaoKe\app\saolei.c
      1          #include "common.h"
      2          #include "LQ12864.h"
      3          #include "saolei.h"
      4          #include "yingjian.h"
      5          #define rows 8
      6          #define cols 8
      7          #define Count 10
      8          
      9          extern uint16 result;
     10          extern uint16 result1;
     11          extern uint16 key_down,key_up,key_left,key_right;
     12          extern uint16 gamestart,gameing;

   \                                 In section .bss, align 2
     13          uint16 gameoversl=0;
   \                     gameoversl:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     14          uint16 t1=0;
   \                     t1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     15          uint16 t2=0;
   \                     t2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     16          uint16 counter=0;
   \                     counter:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     17          uint16 a;
   \                     a:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     18          uint16 b;
   \                     `b`:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     19          uint16 t3=0;
   \                     t3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     20          uint16 t4=0;
   \                     t4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     21          uint16 t5=0;
   \                     t5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     22          uint16 t6=0;
   \                     t6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     23          uint16 ct=0;
   \                     ct:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     24          unsigned char mine[rows][cols];
   \                     mine:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     25          unsigned  char show[rows][cols];
   \                     show:
   \   00000000                      DS8 64

   \                                 In section .bss, align 2
     26          uint16 x=0;
   \                     x:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     27          uint16 y=0;
   \                     y:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     28          uint16 biaozhi=0; 
   \                     biaozhi:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     29          uint16 count = Count ;
   \                     count:
   \   00000000   0x000A             DC16 10

   \                                 In section .bss, align 2
     30          uint16 t=0;
   \                     t:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     31          uint16 ti=0;
   \                     ti:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     32          uint16 kaiguan[4]={0};
   \                     kaiguan:
   \   00000000                      DS8 8

   \                                 In section .bss, align 2
     33          uint16 cit=0;
   \                     cit:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     34          uint16 k=0;
   \                     k:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     35          uint16 timesl=0;
   \                     timesl:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     36          unsigned char s[]="0";
   \                     s:
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .data, align 2
     37          unsigned char f[]="0";
   \                     f:
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .data, align 2
     38          unsigned char g[]="0";
   \                     g:
   \   00000000   0x30 0x00          DC8 "0"
     39          

   \                                 In section .text, align 2, keep-with-next
     40          void saolei(void){
   \                     saolei: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     41            gamestart=1;gameoversl=1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000008   0x8008             STRH     R0,[R1, #+0]
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000010   0x8008             STRH     R0,[R1, #+0]
     42          	uint16 i = 0;
   \   00000012   0x2000             MOVS     R0,#+0
     43          	uint16 j = 0;
   \   00000014   0x2100             MOVS     R1,#+0
     44          	for (i = 0; i < rows ; i++)
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x0010             MOVS     R0,R2
   \   0000001A   0xE014             B.N      ??saolei_0
     45          	{
     46          		for (j = 0; j < cols ; j++)
     47          		{
     48          			mine[i][j] = '0';
   \                     ??saolei_1: (+1)
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable8_2
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   00000026   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000028   0x2330             MOVS     R3,#+48
   \   0000002A   0x548B             STRB     R3,[R1, R2]
     49          			show[i][j] = '*';
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable8_3
   \   00000030   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000032   0xEB12 0x02C0      ADDS     R2,R2,R0, LSL #+3
   \   00000036   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000038   0x232A             MOVS     R3,#+42
   \   0000003A   0x548B             STRB     R3,[R1, R2]
     50          		}
   \   0000003C   0x1C49             ADDS     R1,R1,#+1
   \                     ??saolei_2: (+1)
   \   0000003E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000040   0x2908             CMP      R1,#+8
   \   00000042   0xDBEB             BLT.N    ??saolei_1
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \                     ??saolei_0: (+1)
   \   00000046   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000048   0x2808             CMP      R0,#+8
   \   0000004A   0xDA01             BGE.N    ??saolei_3
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0xE7F6             B.N      ??saolei_2
     51          	}
     52            menu();
   \                     ??saolei_3: (+1)
   \   00000050   0x.... 0x....      BL       menu
     53            while(1)
     54            {  //duqu();
     55              gamestart=1;
   \                     ??saolei_4: (+1)
   \   00000054   0x2001             MOVS     R0,#+1
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000005A   0x8008             STRH     R0,[R1, #+0]
     56              kaiguan[0]=1;
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   00000062   0x8008             STRH     R0,[R1, #+0]
     57          		if (kaiguan[0]==1)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x2801             CMP      R0,#+1
   \   0000006C   0xD12C             BNE.N    ??saolei_5
     58          		{      if(t1==0&&t2==0){
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD10F             BNE.N    ??saolei_6
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD10A             BNE.N    ??saolei_6
     59          	          LCD_CLS();
   \   00000082   0x.... 0x....      BL       LCD_CLS
     60                              pit_init();
   \   00000086   0x.... 0x....      BL       pit_init
     61                                 delay(10);
   \   0000008A   0x200A             MOVS     R0,#+10
   \   0000008C   0x.... 0x....      BL       delay
     62                                 t2=1;
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   00000096   0x8008             STRH     R0,[R1, #+0]
     63                          }     if(cit==0)
   \                     ??saolei_6: (+1)
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000009C   0x8800             LDRH     R0,[R0, #+0]
   \   0000009E   0x2800             CMP      R0,#+0
   \   000000A0   0xD10C             BNE.N    ??saolei_7
     64                          {  LCD_P8x8Ch(8*x,y,0);
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000A8   0x8801             LDRH     R1,[R0, #+0]
   \   000000AA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000B0   0x8800             LDRH     R0,[R0, #+0]
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x00C0             LSLS     R0,R0,#+3
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x.... 0x....      BL       LCD_P8x8Ch
     65                          }
     66          			Game(mine,show);
   \                     ??saolei_7: (+1)
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   000000C4   0x.... 0x....      BL       Game
     67          		}
     68              if(gameoversl==1){
   \                     ??saolei_5: (+1)
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable8_1
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x2801             CMP      R0,#+1
   \   000000D0   0xD1C0             BNE.N    ??saolei_4
     69                if(gamestart==0){
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable8
   \   000000D6   0x8800             LDRH     R0,[R0, #+0]
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD1BB             BNE.N    ??saolei_4
     70                  gameoversl=0;gameing=0;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   000000E2   0x8008             STRH     R0,[R1, #+0]
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable8_10
   \   000000EA   0x8008             STRH     R0,[R1, #+0]
     71                  t1=t2=counter=t3=t4=t5=t6=ct=x=y=biaozhi=t=ti=cit=k=timesl=0;
   \   000000EC   0x2000             MOVS     R0,#+0
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable8_11
   \   000000F2   0x8008             STRH     R0,[R1, #+0]
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable8_12
   \   000000F8   0x8008             STRH     R0,[R1, #+0]
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   000000FE   0x8008             STRH     R0,[R1, #+0]
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000104   0x8008             STRH     R0,[R1, #+0]
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   0000010A   0x8008             STRH     R0,[R1, #+0]
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000110   0x8008             STRH     R0,[R1, #+0]
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   00000116   0x8008             STRH     R0,[R1, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   0000011C   0x8008             STRH     R0,[R1, #+0]
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable8_16
   \   00000122   0x8008             STRH     R0,[R1, #+0]
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   00000128   0x8008             STRH     R0,[R1, #+0]
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable8_18
   \   0000012E   0x8008             STRH     R0,[R1, #+0]
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable8_19
   \   00000134   0x8008             STRH     R0,[R1, #+0]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable8_20
   \   0000013A   0x8008             STRH     R0,[R1, #+0]
   \   0000013C   0x.... 0x....      LDR.W    R1,??DataTable8_21
   \   00000140   0x8008             STRH     R0,[R1, #+0]
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   00000146   0x8008             STRH     R0,[R1, #+0]
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   0000014C   0x8008             STRH     R0,[R1, #+0]
     72                  count = Count ;
   \   0000014E   0x200A             MOVS     R0,#+10
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable8_22
   \   00000154   0x8008             STRH     R0,[R1, #+0]
     73                  return;
   \   00000156   0xBD01             POP      {R0,PC}          ;; return
     74                }
     75            } 
     76            }   
     77          }
     78          
     79          //菜单函数

   \                                 In section .text, align 2, keep-with-next
     80          uint16 menu()
     81          {
     82            //LCD_P128x64Ch();
     83          	return 0;
   \                     menu: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x4770             BX       LR               ;; return
     84          }
     85          
     86           
     87          //设置雷的位置

   \                                 In section .text, align 2, keep-with-next
     88          void set_mine(unsigned char mine[rows][cols])
     89          {   
   \                     set_mine: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     90          	uint16 n = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     91          	uint16 m = 0;
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0xE041             B.N      ??set_mine_0
     92          	while (count)
     93          	{     delay1(20);
   \                     ??set_mine_1: (+1)
   \   0000000A   0x2014             MOVS     R0,#+20
   \   0000000C   0x.... 0x....      BL       delay1
     94                    a= LPLD_ADC_Get(ADC1, DAD1)%10;
   \   00000010   0x2101             MOVS     R1,#+1
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable8_23  ;; 0x400bb000
   \   00000016   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000001A   0x210A             MOVS     R1,#+10
   \   0000001C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000020   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable8_24
   \   00000028   0x8008             STRH     R0,[R1, #+0]
     95                       delay1(20);
   \   0000002A   0x2014             MOVS     R0,#+20
   \   0000002C   0x.... 0x....      BL       delay1
     96                          b= LPLD_ADC_Get(ADC1, DAD1)%10;
   \   00000030   0x2101             MOVS     R1,#+1
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable8_23  ;; 0x400bb000
   \   00000036   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000003A   0x210A             MOVS     R1,#+10
   \   0000003C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000040   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8_25
   \   00000048   0x8008             STRH     R0,[R1, #+0]
     97          		n = (a*8)/10;
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_24
   \   0000004E   0x8800             LDRH     R0,[R0, #+0]
   \   00000050   0x00C0             LSLS     R0,R0,#+3
   \   00000052   0x210A             MOVS     R1,#+10
   \   00000054   0xFB90 0xF0F1      SDIV     R0,R0,R1
     98          		m = (b*8)/10;
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable8_25
   \   0000005C   0x8809             LDRH     R1,[R1, #+0]
   \   0000005E   0x00C9             LSLS     R1,R1,#+3
   \   00000060   0x220A             MOVS     R2,#+10
   \   00000062   0xFB91 0xF1F2      SDIV     R1,R1,R2
     99          		if (mine[n][m] == '0')     
   \   00000066   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000068   0xEB14 0x02C0      ADDS     R2,R4,R0, LSL #+3
   \   0000006C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006E   0x5C8A             LDRB     R2,[R1, R2]
   \   00000070   0x2A30             CMP      R2,#+48
   \   00000072   0xD10C             BNE.N    ??set_mine_0
    100          		{
    101          			mine[n][m] = '1';
   \   00000074   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000076   0xEB14 0x00C0      ADDS     R0,R4,R0, LSL #+3
   \   0000007A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000007C   0x2231             MOVS     R2,#+49
   \   0000007E   0x540A             STRB     R2,[R1, R0]
    102          			count--;
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable8_22
   \   00000084   0x8800             LDRH     R0,[R0, #+0]
   \   00000086   0x1E40             SUBS     R0,R0,#+1
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable8_22
   \   0000008C   0x8008             STRH     R0,[R1, #+0]
    103          		}
    104          	}
   \                     ??set_mine_0: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable8_22
   \   00000092   0x8800             LDRH     R0,[R0, #+0]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD1B8             BNE.N    ??set_mine_1
    105          }
   \   00000098   0xBD10             POP      {R4,PC}          ;; return
    106           
    107          

   \                                 In section .text, align 2, keep-with-next
    108          void display(unsigned char show[rows][cols])  
    109          {  
   \                     display: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    110          	uint16 i = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    111          	uint16 j = 0;
   \   00000006   0x2600             MOVS     R6,#+0
    112           
    113          	for (i = 0; i < rows ; i++)
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x0005             MOVS     R5,R0
   \   0000000C   0xE016             B.N      ??display_0
    114          	{
    115          		for (j = 0; j <cols ; j++)
    116          		{   	s[0]=show[i][j];
   \                     ??display_1: (+1)
   \   0000000E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000010   0xEB14 0x00C5      ADDS     R0,R4,R5, LSL #+3
   \   00000014   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000016   0x5C30             LDRB     R0,[R6, R0]
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable8_26
   \   0000001C   0x7008             STRB     R0,[R1, #+0]
    117          			   LCD_P6x8Str(8*i,j,s);  
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable8_26
   \   00000022   0x0031             MOVS     R1,R6
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x0028             MOVS     R0,R5
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x00C0             LSLS     R0,R0,#+3
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_P6x8Str
    118          		}
   \   00000032   0x1C76             ADDS     R6,R6,#+1
   \                     ??display_2: (+1)
   \   00000034   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000036   0x2E08             CMP      R6,#+8
   \   00000038   0xDBE9             BLT.N    ??display_1
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??display_0: (+1)
   \   0000003C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000003E   0x2D08             CMP      R5,#+8
   \   00000040   0xDA01             BGE.N    ??display_3
   \   00000042   0x2600             MOVS     R6,#+0
   \   00000044   0xE7F6             B.N      ??display_2
    119          	
    120          	}
    121                  
    122          }
   \                     ??display_3: (+1)
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
    123           
    124          //计算雷的个数

   \                                 In section .text, align 2, keep-with-next
    125          uint16 get_num(unsigned char mine[rows][cols], uint16 x, uint16 y) 
    126          {  
   \                     get_num: (+1)
   \   00000000   0xB410             PUSH     {R4}
    127          	uint16 count = 0;
   \   00000002   0x2300             MOVS     R3,#+0
    128          	if (mine[x - 1][y - 1] == '1'&&(x-1)>=0&&(y-1)>=0)//左上方
   \   00000004   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x1914             ADDS     R4,R2,R4
   \   0000000E   0xF814 0x4C09      LDRB     R4,[R4, #-9]
   \   00000012   0x2C31             CMP      R4,#+49
   \   00000014   0xD108             BNE.N    ??get_num_0
   \   00000016   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000018   0x1E4C             SUBS     R4,R1,#+1
   \   0000001A   0x2C00             CMP      R4,#+0
   \   0000001C   0xD404             BMI.N    ??get_num_0
   \   0000001E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000020   0x1E54             SUBS     R4,R2,#+1
   \   00000022   0x2C00             CMP      R4,#+0
   \   00000024   0xD400             BMI.N    ??get_num_0
    129          	{
    130          		count++;
   \   00000026   0x1C5B             ADDS     R3,R3,#+1
    131          	}
    132          	if (mine[x - 1][y] == '1'&&(x-1)>=0)//左边
   \                     ??get_num_0: (+1)
   \   00000028   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002A   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   0000002E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000030   0x1914             ADDS     R4,R2,R4
   \   00000032   0xF814 0x4C08      LDRB     R4,[R4, #-8]
   \   00000036   0x2C31             CMP      R4,#+49
   \   00000038   0xD104             BNE.N    ??get_num_1
   \   0000003A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000003C   0x1E4C             SUBS     R4,R1,#+1
   \   0000003E   0x2C00             CMP      R4,#+0
   \   00000040   0xD400             BMI.N    ??get_num_1
    133          	{
    134          		count++;
   \   00000042   0x1C5B             ADDS     R3,R3,#+1
    135          	}
    136          	if (mine[x - 1][y + 1] == '1'&&(x-1)>=0&&(y+1)<=7)//左下方
   \                     ??get_num_1: (+1)
   \   00000044   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000046   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   0000004A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000004C   0x1914             ADDS     R4,R2,R4
   \   0000004E   0xF814 0x4C07      LDRB     R4,[R4, #-7]
   \   00000052   0x2C31             CMP      R4,#+49
   \   00000054   0xD108             BNE.N    ??get_num_2
   \   00000056   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000058   0x1E4C             SUBS     R4,R1,#+1
   \   0000005A   0x2C00             CMP      R4,#+0
   \   0000005C   0xD404             BMI.N    ??get_num_2
   \   0000005E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000060   0x1C54             ADDS     R4,R2,#+1
   \   00000062   0x2C08             CMP      R4,#+8
   \   00000064   0xDA00             BGE.N    ??get_num_2
    137          	{
    138          		count++;
   \   00000066   0x1C5B             ADDS     R3,R3,#+1
    139          	}
    140          	if (mine[x][y - 1] == '1'&&(y-1)>=0)//上方
   \                     ??get_num_2: (+1)
   \   00000068   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006A   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   0000006E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000070   0x1914             ADDS     R4,R2,R4
   \   00000072   0xF814 0x4C01      LDRB     R4,[R4, #-1]
   \   00000076   0x2C31             CMP      R4,#+49
   \   00000078   0xD104             BNE.N    ??get_num_3
   \   0000007A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000007C   0x1E54             SUBS     R4,R2,#+1
   \   0000007E   0x2C00             CMP      R4,#+0
   \   00000080   0xD400             BMI.N    ??get_num_3
    141          	{
    142          		count++;
   \   00000082   0x1C5B             ADDS     R3,R3,#+1
    143          	}
    144          	if (mine[x][y + 1] == '1'&&(y+1)<=7)//下方
   \                     ??get_num_3: (+1)
   \   00000084   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000086   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   0000008A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000008C   0x1914             ADDS     R4,R2,R4
   \   0000008E   0x7864             LDRB     R4,[R4, #+1]
   \   00000090   0x2C31             CMP      R4,#+49
   \   00000092   0xD104             BNE.N    ??get_num_4
   \   00000094   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000096   0x1C54             ADDS     R4,R2,#+1
   \   00000098   0x2C08             CMP      R4,#+8
   \   0000009A   0xDA00             BGE.N    ??get_num_4
    145          	{
    146          		count++;
   \   0000009C   0x1C5B             ADDS     R3,R3,#+1
    147          	}
    148          	if (mine[x + 1][y - 1] == '1'&&(x+1)<=7&&(y-1)>=0)//右上方
   \                     ??get_num_4: (+1)
   \   0000009E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000A0   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   000000A4   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000A6   0x1914             ADDS     R4,R2,R4
   \   000000A8   0x79E4             LDRB     R4,[R4, #+7]
   \   000000AA   0x2C31             CMP      R4,#+49
   \   000000AC   0xD108             BNE.N    ??get_num_5
   \   000000AE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000B0   0x1C4C             ADDS     R4,R1,#+1
   \   000000B2   0x2C08             CMP      R4,#+8
   \   000000B4   0xDA04             BGE.N    ??get_num_5
   \   000000B6   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000B8   0x1E54             SUBS     R4,R2,#+1
   \   000000BA   0x2C00             CMP      R4,#+0
   \   000000BC   0xD400             BMI.N    ??get_num_5
    149          	{
    150          		count++;
   \   000000BE   0x1C5B             ADDS     R3,R3,#+1
    151          	}
    152          	if (mine[x + 1][y] == '1'&&(x+1)<=7)//右方
   \                     ??get_num_5: (+1)
   \   000000C0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000C2   0xEB10 0x04C1      ADDS     R4,R0,R1, LSL #+3
   \   000000C6   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000C8   0x1914             ADDS     R4,R2,R4
   \   000000CA   0x7A24             LDRB     R4,[R4, #+8]
   \   000000CC   0x2C31             CMP      R4,#+49
   \   000000CE   0xD104             BNE.N    ??get_num_6
   \   000000D0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000D2   0x1C4C             ADDS     R4,R1,#+1
   \   000000D4   0x2C08             CMP      R4,#+8
   \   000000D6   0xDA00             BGE.N    ??get_num_6
    153          	{
    154          		count++;
   \   000000D8   0x1C5B             ADDS     R3,R3,#+1
    155          	}
    156          	if (mine[x + 1][y + 1] == '1'&&(x+1)<=7&&(y+1)<=7)//右下方
   \                     ??get_num_6: (+1)
   \   000000DA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000DC   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   000000E0   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000E2   0x1810             ADDS     R0,R2,R0
   \   000000E4   0x7A40             LDRB     R0,[R0, #+9]
   \   000000E6   0x2831             CMP      R0,#+49
   \   000000E8   0xD108             BNE.N    ??get_num_7
   \   000000EA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000EC   0x1C48             ADDS     R0,R1,#+1
   \   000000EE   0x2808             CMP      R0,#+8
   \   000000F0   0xDA04             BGE.N    ??get_num_7
   \   000000F2   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000F4   0x1C50             ADDS     R0,R2,#+1
   \   000000F6   0x2808             CMP      R0,#+8
   \   000000F8   0xDA00             BGE.N    ??get_num_7
    157          	{
    158          		count++;
   \   000000FA   0x1C5B             ADDS     R3,R3,#+1
    159          	}
    160          	return  count;
   \                     ??get_num_7: (+1)
   \   000000FC   0x0018             MOVS     R0,R3
   \   000000FE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000100   0xBC10             POP      {R4}
   \   00000102   0x4770             BX       LR               ;; return
    161          }
    162          //扫雷

   \                                 In section .text, align 2, keep-with-next
    163          uint16 Sweep(unsigned char mine[rows][cols],unsigned  char show[rows][cols])
    164          {        
   \                     Sweep: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
    165                  
    166                   if(key_up==1&&ti==0)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   00000008   0x8800             LDRH     R0,[R0, #+0]
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD112             BNE.N    ??Sweep_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   00000012   0x8800             LDRH     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD10D             BNE.N    ??Sweep_0
    167                   {
    168                     y--;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000001C   0x8800             LDRH     R0,[R0, #+0]
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    169                     ti++;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   0000002A   0x8800             LDRH     R0,[R0, #+0]
   \   0000002C   0x1C40             ADDS     R0,R0,#+1
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000032   0x8008             STRH     R0,[R1, #+0]
    170                   } 
    171                    if(key_down==1&&ti==0)
   \                     ??Sweep_0: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable8_28
   \   00000038   0x8800             LDRH     R0,[R0, #+0]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD112             BNE.N    ??Sweep_1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   00000042   0x8800             LDRH     R0,[R0, #+0]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD10D             BNE.N    ??Sweep_1
    172                    {
    173                     y++;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   00000054   0x8008             STRH     R0,[R1, #+0]
    174                     ti++;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x1C40             ADDS     R0,R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000062   0x8008             STRH     R0,[R1, #+0]
    175                    }
    176                    if(key_left==1&&ti==0)
   \                     ??Sweep_1: (+1)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x2801             CMP      R0,#+1
   \   0000006C   0xD112             BNE.N    ??Sweep_2
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0x2800             CMP      R0,#+0
   \   00000076   0xD10D             BNE.N    ??Sweep_2
    177                   {
    178                     x--;
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x1E40             SUBS     R0,R0,#+1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   00000084   0x8008             STRH     R0,[R1, #+0]
    179                     ti++;
   \   00000086   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   0000008A   0x8800             LDRH     R0,[R0, #+0]
   \   0000008C   0x1C40             ADDS     R0,R0,#+1
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000092   0x8008             STRH     R0,[R1, #+0]
    180                   }
    181                    if(key_right==1&&ti==0)
   \                     ??Sweep_2: (+1)
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable8_30
   \   00000098   0x8800             LDRH     R0,[R0, #+0]
   \   0000009A   0x2801             CMP      R0,#+1
   \   0000009C   0xD112             BNE.N    ??Sweep_3
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   000000A2   0x8800             LDRH     R0,[R0, #+0]
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD10D             BNE.N    ??Sweep_3
    182                   {
    183                     x++;
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000AC   0x8800             LDRH     R0,[R0, #+0]
   \   000000AE   0x1C40             ADDS     R0,R0,#+1
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
    184                     ti++;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   000000BA   0x8800             LDRH     R0,[R0, #+0]
   \   000000BC   0x1C40             ADDS     R0,R0,#+1
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   000000C2   0x8008             STRH     R0,[R1, #+0]
    185                   }
    186                   if(x<=0)
   \                     ??Sweep_3: (+1)
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000C8   0x8800             LDRH     R0,[R0, #+0]
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD103             BNE.N    ??Sweep_4
    187                   { x=0;
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000D4   0x8008             STRH     R0,[R1, #+0]
    188                   }
    189                    if(x>=7)
   \                     ??Sweep_4: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000DA   0x8800             LDRH     R0,[R0, #+0]
   \   000000DC   0x2807             CMP      R0,#+7
   \   000000DE   0xDB03             BLT.N    ??Sweep_5
    190                   { x=7;}
   \   000000E0   0x2007             MOVS     R0,#+7
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000E6   0x8008             STRH     R0,[R1, #+0]
    191                    if(y<=0)
   \                     ??Sweep_5: (+1)
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000EC   0x8800             LDRH     R0,[R0, #+0]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD103             BNE.N    ??Sweep_6
    192                   { y=0;}
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   000000F8   0x8008             STRH     R0,[R1, #+0]
    193                    if(y>=7)
   \                     ??Sweep_6: (+1)
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000FE   0x8800             LDRH     R0,[R0, #+0]
   \   00000100   0x2807             CMP      R0,#+7
   \   00000102   0xDB03             BLT.N    ??Sweep_7
    194                   { y=7;}
   \   00000104   0x2007             MOVS     R0,#+7
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000010A   0x8008             STRH     R0,[R1, #+0]
    195                   if(cit==0){
   \                     ??Sweep_7: (+1)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000110   0x8800             LDRH     R0,[R0, #+0]
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xF040 0x80B1      BNE.W    ??Sweep_8
    196                     display(show); 
   \   00000118   0x0020             MOVS     R0,R4
   \   0000011A   0x.... 0x....      BL       display
    197                  k=0;
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable8_12
   \   00000124   0x8008             STRH     R0,[R1, #+0]
    198                  uint16 i = 0;
   \   00000126   0x2000             MOVS     R0,#+0
    199          	uint16 j = 0;
   \   00000128   0x2100             MOVS     R1,#+0
    200          	for (i = 0; i < rows ; i++)
   \   0000012A   0x2200             MOVS     R2,#+0
   \   0000012C   0x0010             MOVS     R0,R2
   \   0000012E   0xE012             B.N      ??Sweep_9
    201          	{
    202          		for (j = 0; j <cols ; j++)
    203          		{   	
    204                            if(show[i][j]=='*')
   \                     ??Sweep_10: (+1)
   \   00000130   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000132   0xEB14 0x02C0      ADDS     R2,R4,R0, LSL #+3
   \   00000136   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000138   0x5C8A             LDRB     R2,[R1, R2]
   \   0000013A   0x2A2A             CMP      R2,#+42
   \   0000013C   0xD106             BNE.N    ??Sweep_11
    205                            {  k++;
   \   0000013E   0x.... 0x....      LDR.W    R2,??DataTable8_12
   \   00000142   0x8812             LDRH     R2,[R2, #+0]
   \   00000144   0x1C52             ADDS     R2,R2,#+1
   \   00000146   0x.... 0x....      LDR.W    R3,??DataTable8_12
   \   0000014A   0x801A             STRH     R2,[R3, #+0]
    206          
    207                            }
    208          		}
   \                     ??Sweep_11: (+1)
   \   0000014C   0x1C49             ADDS     R1,R1,#+1
   \                     ??Sweep_12: (+1)
   \   0000014E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000150   0x2908             CMP      R1,#+8
   \   00000152   0xDBED             BLT.N    ??Sweep_10
   \   00000154   0x1C40             ADDS     R0,R0,#+1
   \                     ??Sweep_9: (+1)
   \   00000156   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000158   0x2808             CMP      R0,#+8
   \   0000015A   0xDA01             BGE.N    ??Sweep_13
   \   0000015C   0x2100             MOVS     R1,#+0
   \   0000015E   0xE7F6             B.N      ??Sweep_12
    209          	}
    210                sprintf(g, "%d", k);
   \                     ??Sweep_13: (+1)
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000164   0x8802             LDRH     R2,[R0, #+0]
   \   00000166   0x....             ADR.N    R1,??DataTable4  ;; 0x25, 0x64, 0x00, 0x00
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable8_31
   \   0000016C   0x.... 0x....      BL       sprintf
    211                 LCD_P8x16Str(70,3,"*");
   \   00000170   0x....             ADR.N    R2,??DataTable5  ;; "*"
   \   00000172   0x2103             MOVS     R1,#+3
   \   00000174   0x2046             MOVS     R0,#+70
   \   00000176   0x.... 0x....      BL       LCD_P8x16Str
    212          LCD_P14x16Ch(78,3,26);
   \   0000017A   0x221A             MOVS     R2,#+26
   \   0000017C   0x2103             MOVS     R1,#+3
   \   0000017E   0x204E             MOVS     R0,#+78
   \   00000180   0x.... 0x....      BL       LCD_P14x16Ch
    213          LCD_P14x16Ch(92,3,27);
   \   00000184   0x221B             MOVS     R2,#+27
   \   00000186   0x2103             MOVS     R1,#+3
   \   00000188   0x205C             MOVS     R0,#+92
   \   0000018A   0x.... 0x....      BL       LCD_P14x16Ch
    214              if(t6==0&&g[0]<10){
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000192   0x8800             LDRH     R0,[R0, #+0]
   \   00000194   0x2800             CMP      R0,#+0
   \   00000196   0xD10D             BNE.N    ??Sweep_14
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable8_31
   \   0000019C   0x7800             LDRB     R0,[R0, #+0]
   \   0000019E   0x280A             CMP      R0,#+10
   \   000001A0   0xDA08             BGE.N    ??Sweep_14
    215                      LCD_CLS();
   \   000001A2   0x.... 0x....      BL       LCD_CLS
    216                                 delay1(10);
   \   000001A6   0x200A             MOVS     R0,#+10
   \   000001A8   0x.... 0x....      BL       delay1
    217                                 t6=1;
   \   000001AC   0x2001             MOVS     R0,#+1
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   000001B2   0x8008             STRH     R0,[R1, #+0]
    218                          } 
    219          LCD_P8x16Str(106,3,g);
   \                     ??Sweep_14: (+1)
   \   000001B4   0x.... 0x....      LDR.W    R2,??DataTable8_31
   \   000001B8   0x2103             MOVS     R1,#+3
   \   000001BA   0x206A             MOVS     R0,#+106
   \   000001BC   0x.... 0x....      BL       LCD_P8x16Str
    220                  if(k<=15&&k>Count){
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001C4   0x8800             LDRH     R0,[R0, #+0]
   \   000001C6   0x380B             SUBS     R0,R0,#+11
   \   000001C8   0x2805             CMP      R0,#+5
   \   000001CA   0xD20E             BCS.N    ??Sweep_15
    221                  LCD_P14x16Ch(70,0,23);
   \   000001CC   0x2217             MOVS     R2,#+23
   \   000001CE   0x2100             MOVS     R1,#+0
   \   000001D0   0x2046             MOVS     R0,#+70
   \   000001D2   0x.... 0x....      BL       LCD_P14x16Ch
    222                  LCD_P14x16Ch(84,0,24);
   \   000001D6   0x2218             MOVS     R2,#+24
   \   000001D8   0x2100             MOVS     R1,#+0
   \   000001DA   0x2054             MOVS     R0,#+84
   \   000001DC   0x.... 0x....      BL       LCD_P14x16Ch
    223                  LCD_P14x16Ch(98,0,25);
   \   000001E0   0x2219             MOVS     R2,#+25
   \   000001E2   0x2100             MOVS     R1,#+0
   \   000001E4   0x2062             MOVS     R0,#+98
   \   000001E6   0x.... 0x....      BL       LCD_P14x16Ch
    224                  }
    225                  if(k==Count){
   \                     ??Sweep_15: (+1)
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001EE   0x8800             LDRH     R0,[R0, #+0]
   \   000001F0   0x280A             CMP      R0,#+10
   \   000001F2   0xD121             BNE.N    ??Sweep_16
    226                    cit=2;  
   \   000001F4   0x2002             MOVS     R0,#+2
   \   000001F6   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   000001FA   0x8008             STRH     R0,[R1, #+0]
    227          		                 if(t5==0){
   \   000001FC   0x.... 0x....      LDR.W    R0,??DataTable8_18
   \   00000200   0x8800             LDRH     R0,[R0, #+0]
   \   00000202   0x2800             CMP      R0,#+0
   \   00000204   0xD108             BNE.N    ??Sweep_17
    228                      LCD_CLS();
   \   00000206   0x.... 0x....      BL       LCD_CLS
    229                                 delay1(10);
   \   0000020A   0x200A             MOVS     R0,#+10
   \   0000020C   0x.... 0x....      BL       delay1
    230                                 t5=1;
   \   00000210   0x2001             MOVS     R0,#+1
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable8_18
   \   00000216   0x8008             STRH     R0,[R1, #+0]
    231                          } 
    232                      LCD_P8x16Str(30,2,"you are a ");
   \                     ??Sweep_17: (+1)
   \   00000218   0x.... 0x....      LDR.W    R2,??DataTable8_32
   \   0000021C   0x2102             MOVS     R1,#+2
   \   0000021E   0x201E             MOVS     R0,#+30
   \   00000220   0x.... 0x....      BL       LCD_P8x16Str
    233                       LCD_P8x16Str(40,4," winner ");
   \   00000224   0x.... 0x....      LDR.W    R2,??DataTable8_33
   \   00000228   0x2104             MOVS     R1,#+4
   \   0000022A   0x2028             MOVS     R0,#+40
   \   0000022C   0x.... 0x....      BL       LCD_P8x16Str
    234                       gameoversl=1;
   \   00000230   0x2001             MOVS     R0,#+1
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000236   0x8008             STRH     R0,[R1, #+0]
    235                  }
    236          
    237                      if(ct==1){
   \                     ??Sweep_16: (+1)
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   0000023C   0x8800             LDRH     R0,[R0, #+0]
   \   0000023E   0x2801             CMP      R0,#+1
   \   00000240   0xD11B             BNE.N    ??Sweep_8
    238                               if(t4==0){
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable8_19
   \   00000246   0x8800             LDRH     R0,[R0, #+0]
   \   00000248   0x2800             CMP      R0,#+0
   \   0000024A   0xD108             BNE.N    ??Sweep_18
    239                      LCD_CLS();
   \   0000024C   0x.... 0x....      BL       LCD_CLS
    240                                 delay1(10);
   \   00000250   0x200A             MOVS     R0,#+10
   \   00000252   0x.... 0x....      BL       delay1
    241                                 t4=1;
   \   00000256   0x2001             MOVS     R0,#+1
   \   00000258   0x.... 0x....      LDR.W    R1,??DataTable8_19
   \   0000025C   0x8008             STRH     R0,[R1, #+0]
    242                          } 
    243                      cit=2;
   \                     ??Sweep_18: (+1)
   \   0000025E   0x2002             MOVS     R0,#+2
   \   00000260   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   00000264   0x8008             STRH     R0,[R1, #+0]
    244                      LCD_P8x16Str(20,3,"try again ! ");
   \   00000266   0x.... 0x....      LDR.W    R2,??DataTable8_34
   \   0000026A   0x2103             MOVS     R1,#+3
   \   0000026C   0x2014             MOVS     R0,#+20
   \   0000026E   0x.... 0x....      BL       LCD_P8x16Str
    245                      gameoversl=1;
   \   00000272   0x2001             MOVS     R0,#+1
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000278   0x8008             STRH     R0,[R1, #+0]
    246          /*             for (int i=0;i<500;i++)//蜂鸣器
    247          	{
    248          		LPLD_GPIO_Toggle_b(PTC,9); 
    249                       delay1(100);
    250                        LPLD_GPIO_Toggle_b(PTC,9); 
    251                       delay1(100);
    252          	}*/        
    253                     }
    254                   } 
    255          	return 0;
   \                     ??Sweep_8: (+1)
   \   0000027A   0x2000             MOVS     R0,#+0
   \   0000027C   0xBD10             POP      {R4,PC}          ;; return
    256          }
    257           
    258           
    259          //游戏

   \                                 In section .text, align 2, keep-with-next
    260          uint16 Game(unsigned char mine[rows][cols],unsigned char show[rows][cols])
    261          {    
   \                     Game: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    262            time1();
   \   00000006   0x.... 0x....      BL       time1
    263            kongzhi();
   \   0000000A   0x.... 0x....      BL       kongzhi
    264          	set_mine(mine);
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       set_mine
    265                  if(cit==0){
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD102             BNE.N    ??Game_0
    266          	display(show);
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x.... 0x....      BL       display
    267                  }
    268          	//display(mine);//可以将雷的位置显示出来
    269          	Sweep(mine,show);
   \                     ??Game_0: (+1)
   \   00000024   0x0029             MOVS     R1,R5
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       Sweep
    270          	return 0;
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
    271          }
    272          

   \                                 In section .text, align 2, keep-with-next
    273          void kongzhi(void)
    274            {  
   \                     kongzhi: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    275          result1 = LPLD_ADC_Get(ADC0, DAD1);//获得数字量
   \   00000002   0x2101             MOVS     R1,#+1
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable8_35  ;; 0x4003b000
   \   00000008   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable8_36
   \   00000010   0x8008             STRH     R0,[R1, #+0]
    276          result = LPLD_ADC_Get(ADC0, DAD3);
   \   00000012   0x2103             MOVS     R1,#+3
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable8_35  ;; 0x4003b000
   \   00000018   0x.... 0x....      BL       LPLD_ADC_Get
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   00000020   0x8008             STRH     R0,[R1, #+0]
    277          if(result<1800&&t==0){
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable8_37
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0xF5B0 0x6FE1      CMP      R0,#+1800
   \   0000002C   0xDA1C             BGE.N    ??kongzhi_0
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000032   0x8800             LDRH     R0,[R0, #+0]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD117             BNE.N    ??kongzhi_0
    278          
    279             key_up=1;  
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   0000003E   0x8008             STRH     R0,[R1, #+0]
    280              key_left=0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   00000046   0x8008             STRH     R0,[R1, #+0]
    281            key_right=0; 
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   0000004E   0x8008             STRH     R0,[R1, #+0]
    282            key_down=0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   00000056   0x8008             STRH     R0,[R1, #+0]
    283           t++;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   0000005C   0x8800             LDRH     R0,[R0, #+0]
   \   0000005E   0x1C40             ADDS     R0,R0,#+1
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   00000064   0x8008             STRH     R0,[R1, #+0]
   \   00000066   0xE022             B.N      ??kongzhi_1
    284                     //up
    285          }
    286          else if(result>2200&&t==0){
   \                     ??kongzhi_0: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable8_37
   \   0000006C   0x8800             LDRH     R0,[R0, #+0]
   \   0000006E   0xF640 0x0199      MOVW     R1,#+2201
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xDB1B             BLT.N    ??kongzhi_1
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD116             BNE.N    ??kongzhi_1
    287               key_up=0;  
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   00000086   0x8008             STRH     R0,[R1, #+0]
    288              key_left=0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   0000008E   0x8008             STRH     R0,[R1, #+0]
    289            key_right=0; 
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   00000096   0x8008             STRH     R0,[R1, #+0]
    290            key_down=1;
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   0000009E   0x8008             STRH     R0,[R1, #+0]
    291              t++;         //down
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000000A4   0x8800             LDRH     R0,[R0, #+0]
   \   000000A6   0x1C40             ADDS     R0,R0,#+1
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   000000AC   0x8008             STRH     R0,[R1, #+0]
    292          }
    293          
    294          if(result1<1800&&t==0){
   \                     ??kongzhi_1: (+1)
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   000000B2   0x8800             LDRH     R0,[R0, #+0]
   \   000000B4   0xF5B0 0x6FE1      CMP      R0,#+1800
   \   000000B8   0xDA1C             BGE.N    ??kongzhi_2
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000000BE   0x8800             LDRH     R0,[R0, #+0]
   \   000000C0   0x2800             CMP      R0,#+0
   \   000000C2   0xD117             BNE.N    ??kongzhi_2
    295                key_up=0;  
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   000000CA   0x8008             STRH     R0,[R1, #+0]
    296              key_left=1;
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   000000D2   0x8008             STRH     R0,[R1, #+0]
    297            key_right=0; 
   \   000000D4   0x2000             MOVS     R0,#+0
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   000000DA   0x8008             STRH     R0,[R1, #+0]
    298            key_down=0;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   000000E2   0x8008             STRH     R0,[R1, #+0]
    299               t++;     //left
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000000E8   0x8800             LDRH     R0,[R0, #+0]
   \   000000EA   0x1C40             ADDS     R0,R0,#+1
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   000000F0   0x8008             STRH     R0,[R1, #+0]
   \   000000F2   0xE022             B.N      ??kongzhi_3
    300          }
    301          else if(result1>2200&&t==0){
   \                     ??kongzhi_2: (+1)
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   000000F8   0x8800             LDRH     R0,[R0, #+0]
   \   000000FA   0xF640 0x0199      MOVW     R1,#+2201
   \   000000FE   0x4288             CMP      R0,R1
   \   00000100   0xDB1B             BLT.N    ??kongzhi_3
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000106   0x8800             LDRH     R0,[R0, #+0]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD116             BNE.N    ??kongzhi_3
    302                key_up=0;  
   \   0000010C   0x2000             MOVS     R0,#+0
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   00000112   0x8008             STRH     R0,[R1, #+0]
    303              key_left=0;
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   0000011A   0x8008             STRH     R0,[R1, #+0]
    304            key_right=1; 
   \   0000011C   0x2001             MOVS     R0,#+1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   00000122   0x8008             STRH     R0,[R1, #+0]
    305            key_down=0;            //right
   \   00000124   0x2000             MOVS     R0,#+0
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   0000012A   0x8008             STRH     R0,[R1, #+0]
    306            t++;
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000130   0x8800             LDRH     R0,[R0, #+0]
   \   00000132   0x1C40             ADDS     R0,R0,#+1
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   00000138   0x8008             STRH     R0,[R1, #+0]
    307          }
    308          if(result>=1800&&result<=2200&&result1>=1800&&result1<=2200)
   \                     ??kongzhi_3: (+1)
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable8_37
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0xF5B0 0x60E1      SUBS     R0,R0,#+1800
   \   00000144   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000148   0xD81F             BHI.N    ??kongzhi_4
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable8_36
   \   0000014E   0x8800             LDRH     R0,[R0, #+0]
   \   00000150   0xF5B0 0x60E1      SUBS     R0,R0,#+1800
   \   00000154   0xF5B0 0x7FC8      CMP      R0,#+400
   \   00000158   0xD817             BHI.N    ??kongzhi_4
    309          {
    310           t=0;
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   00000160   0x8008             STRH     R0,[R1, #+0]
    311           ti=0;
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable8_13
   \   00000168   0x8008             STRH     R0,[R1, #+0]
    312             key_up=0;  
   \   0000016A   0x2000             MOVS     R0,#+0
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   00000170   0x8008             STRH     R0,[R1, #+0]
    313             key_left=0;
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   00000178   0x8008             STRH     R0,[R1, #+0]
    314            key_right=0; 
   \   0000017A   0x2000             MOVS     R0,#+0
   \   0000017C   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   00000180   0x8008             STRH     R0,[R1, #+0]
    315            key_down=0; 
   \   00000182   0x2000             MOVS     R0,#+0
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   00000188   0x8008             STRH     R0,[R1, #+0]
    316          }
    317            delay1(100);
   \                     ??kongzhi_4: (+1)
   \   0000018A   0x2064             MOVS     R0,#+100
   \   0000018C   0x.... 0x....      BL       delay1
    318          }
   \   00000190   0xBD01             POP      {R0,PC}          ;; return
    319          

   \                                 In section .text, align 2, keep-with-next
    320          void delay1(uint16 ms)
    321          {  
    322             uint16 ii,jj;
    323             if (ms<1) ms=1;
   \                     delay1: (+1)
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD100             BNE.N    ??delay1_0
   \   00000006   0x2001             MOVS     R0,#+1
    324             for(ii=0;ii<ms;ii++)
   \                     ??delay1_0: (+1)
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0xE005             B.N      ??delay1_1
    325               for(jj=0;jj<500;jj++);  
   \                     ??delay1_2: (+1)
   \   0000000C   0x1C52             ADDS     R2,R2,#+1
   \                     ??delay1_3: (+1)
   \   0000000E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000010   0xF5B2 0x7FFA      CMP      R2,#+500
   \   00000014   0xDBFA             BLT.N    ??delay1_2
   \   00000016   0x1C49             ADDS     R1,R1,#+1
   \                     ??delay1_1: (+1)
   \   00000018   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001C   0x4281             CMP      R1,R0
   \   0000001E   0xD201             BCS.N    ??delay1_4
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0xE7F4             B.N      ??delay1_3
    326                 
    327          } 
   \                     ??delay1_4: (+1)
   \   00000024   0x4770             BX       LR               ;; return
    328          
    329          /*void duqu(void){   
    330            
    331            if(LPLD_GPIO_Input_b(PTC, 0)==0){
    332              delay1(10);
    333              if(LPLD_GPIO_Input_b(PTC, 0)==0)
    334              {
    335                kaiguan[0]=1;
    336              }
    337            }
    338          }*/
    339          

   \                                 In section .text, align 2, keep-with-next
    340          void time1(void)      
    341          {        
   \                     time1: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    342               timesl=counter;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_21
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable8_11
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
    343               if(cit==0){
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000012   0x8800             LDRH     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD117             BNE.N    ??time1_0
    344                 sprintf(f, "%d", timesl);
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000001C   0x8802             LDRH     R2,[R0, #+0]
   \   0000001E   0x....             ADR.N    R1,??DataTable7  ;; 0x25, 0x64, 0x00, 0x00
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable8_38
   \   00000024   0x.... 0x....      BL       sprintf
    345             LCD_P8x16Str(100,6,f);
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable8_38
   \   0000002C   0x2106             MOVS     R1,#+6
   \   0000002E   0x2064             MOVS     R0,#+100
   \   00000030   0x.... 0x....      BL       LCD_P8x16Str
    346            LCD_P14x16Ch(70,6,17);
   \   00000034   0x2211             MOVS     R2,#+17
   \   00000036   0x2106             MOVS     R1,#+6
   \   00000038   0x2046             MOVS     R0,#+70
   \   0000003A   0x.... 0x....      BL       LCD_P14x16Ch
    347          LCD_P14x16Ch(84,6,18);
   \   0000003E   0x2212             MOVS     R2,#+18
   \   00000040   0x2106             MOVS     R1,#+6
   \   00000042   0x2054             MOVS     R0,#+84
   \   00000044   0x.... 0x....      BL       LCD_P14x16Ch
    348               }
    349                 if(timesl>=200&&cit!=2)
   \                     ??time1_0: (+1)
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x28C8             CMP      R0,#+200
   \   00000050   0xDB25             BLT.N    ??time1_1
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000056   0x8800             LDRH     R0,[R0, #+0]
   \   00000058   0x2802             CMP      R0,#+2
   \   0000005A   0xD020             BEQ.N    ??time1_1
    350                 {  
    351                   cit=1;
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   00000062   0x8008             STRH     R0,[R1, #+0]
    352                      if(t3==0){
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD108             BNE.N    ??time1_2
    353          	          LCD_CLS();
   \   0000006E   0x.... 0x....      BL       LCD_CLS
    354                                 delay1(10);
   \   00000072   0x200A             MOVS     R0,#+10
   \   00000074   0x.... 0x....      BL       delay1
    355                                 t3=1;
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable8_20
   \   0000007E   0x8008             STRH     R0,[R1, #+0]
    356                          } 
    357                  
    358                    LCD_P8x16Str(10,2,"you are out of ");
   \                     ??time1_2: (+1)
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable8_39
   \   00000084   0x2102             MOVS     R1,#+2
   \   00000086   0x200A             MOVS     R0,#+10
   \   00000088   0x.... 0x....      BL       LCD_P8x16Str
    359                       LCD_P8x16Str(40,4," time ");
   \   0000008C   0x.... 0x....      LDR.W    R2,??DataTable8_40
   \   00000090   0x2104             MOVS     R1,#+4
   \   00000092   0x2028             MOVS     R0,#+40
   \   00000094   0x.... 0x....      BL       LCD_P8x16Str
    360                       gameoversl=1;    
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x....             LDR.N    R1,??DataTable8_1
   \   0000009C   0x8008             STRH     R0,[R1, #+0]
    361                 }    
    362          }
   \                     ??time1_1: (+1)
   \   0000009E   0xBD01             POP      {R0,PC}          ;; return
    363          

   \                                 In section .text, align 2, keep-with-next
    364          void surrond(uint16 a, uint16 b)
    365          {   if((a+1)<=7&&(b+1)<=7){
   \                     surrond: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000008   0x1C60             ADDS     R0,R4,#+1
   \   0000000A   0x2808             CMP      R0,#+8
   \   0000000C   0xDA1E             BGE.N    ??surrond_0
   \   0000000E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000010   0x1C68             ADDS     R0,R5,#+1
   \   00000012   0x2808             CMP      R0,#+8
   \   00000014   0xDA1A             BGE.N    ??surrond_0
    366            if(mine[a+1][b+1] != '1')
   \   00000016   0x....             LDR.N    R0,??DataTable8_2
   \   00000018   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000001A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000001E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000020   0x1828             ADDS     R0,R5,R0
   \   00000022   0x7A40             LDRB     R0,[R0, #+9]
   \   00000024   0x2831             CMP      R0,#+49
   \   00000026   0xD011             BEQ.N    ??surrond_0
    367            {   
    368                 show[a+1][b+1] = get_num(mine, a+1, b+1)+ '0';
   \   00000028   0x....             LDR.N    R0,??DataTable8_3
   \   0000002A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000002C   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000030   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000032   0x182E             ADDS     R6,R5,R0
   \   00000034   0x1C6A             ADDS     R2,R5,#+1
   \   00000036   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000038   0x1C61             ADDS     R1,R4,#+1
   \   0000003A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000003C   0x....             LDR.N    R0,??DataTable8_2
   \   0000003E   0x.... 0x....      BL       get_num
   \   00000042   0x3030             ADDS     R0,R0,#+48
   \   00000044   0x7270             STRB     R0,[R6, #+9]
    369                              //    set_mine(mine);
    370                                  delay1(50);
   \   00000046   0x2032             MOVS     R0,#+50
   \   00000048   0x.... 0x....      BL       delay1
    371            }
    372          }  if((b+1)<=7){
   \                     ??surrond_0: (+1)
   \   0000004C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000004E   0x1C68             ADDS     R0,R5,#+1
   \   00000050   0x2808             CMP      R0,#+8
   \   00000052   0xDA1A             BGE.N    ??surrond_1
    373             if(mine[a][b+1] != '1')
   \   00000054   0x....             LDR.N    R0,??DataTable8_2
   \   00000056   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000058   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000005C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000005E   0x1828             ADDS     R0,R5,R0
   \   00000060   0x7840             LDRB     R0,[R0, #+1]
   \   00000062   0x2831             CMP      R0,#+49
   \   00000064   0xD011             BEQ.N    ??surrond_1
    374            {
    375                 show[a][b+1] = get_num(mine, a, b+1)+ '0';
   \   00000066   0x....             LDR.N    R0,??DataTable8_3
   \   00000068   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000006A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000006E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000070   0x182E             ADDS     R6,R5,R0
   \   00000072   0x1C6A             ADDS     R2,R5,#+1
   \   00000074   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000076   0x0021             MOVS     R1,R4
   \   00000078   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000007A   0x....             LDR.N    R0,??DataTable8_2
   \   0000007C   0x.... 0x....      BL       get_num
   \   00000080   0x3030             ADDS     R0,R0,#+48
   \   00000082   0x7070             STRB     R0,[R6, #+1]
    376                                 //  set_mine(mine);
    377                                  delay1(50);
   \   00000084   0x2032             MOVS     R0,#+50
   \   00000086   0x.... 0x....      BL       delay1
    378            }
    379          }
    380          if((a+1)<=7){
   \                     ??surrond_1: (+1)
   \   0000008A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008C   0x1C60             ADDS     R0,R4,#+1
   \   0000008E   0x2808             CMP      R0,#+8
   \   00000090   0xDA1A             BGE.N    ??surrond_2
    381           if(mine[a+1][b] != '1')
   \   00000092   0x....             LDR.N    R0,??DataTable8_2
   \   00000094   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000096   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000009A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000009C   0x1828             ADDS     R0,R5,R0
   \   0000009E   0x7A00             LDRB     R0,[R0, #+8]
   \   000000A0   0x2831             CMP      R0,#+49
   \   000000A2   0xD011             BEQ.N    ??surrond_2
    382            {
    383                 show[a+1][b] = get_num(mine, a+1, b)+ '0';
   \   000000A4   0x....             LDR.N    R0,??DataTable8_3
   \   000000A6   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000A8   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000000AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000AE   0x182E             ADDS     R6,R5,R0
   \   000000B0   0x002A             MOVS     R2,R5
   \   000000B2   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000B4   0x1C61             ADDS     R1,R4,#+1
   \   000000B6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000B8   0x....             LDR.N    R0,??DataTable8_2
   \   000000BA   0x.... 0x....      BL       get_num
   \   000000BE   0x3030             ADDS     R0,R0,#+48
   \   000000C0   0x7230             STRB     R0,[R6, #+8]
    384                              //    set_mine(mine);
    385                                  delay1(50);
   \   000000C2   0x2032             MOVS     R0,#+50
   \   000000C4   0x.... 0x....      BL       delay1
    386            }}
    387            if((a-1)>=0&&(b+1)<=7){
   \                     ??surrond_2: (+1)
   \   000000C8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CA   0x1E60             SUBS     R0,R4,#+1
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xD420             BMI.N    ??surrond_3
   \   000000D0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000D2   0x1C68             ADDS     R0,R5,#+1
   \   000000D4   0x2808             CMP      R0,#+8
   \   000000D6   0xDA1C             BGE.N    ??surrond_3
    388           if(mine[a-1][b+1] != '1')
   \   000000D8   0x....             LDR.N    R0,??DataTable8_2
   \   000000DA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000DC   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000000E0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E2   0x1828             ADDS     R0,R5,R0
   \   000000E4   0xF810 0x0C07      LDRB     R0,[R0, #-7]
   \   000000E8   0x2831             CMP      R0,#+49
   \   000000EA   0xD012             BEQ.N    ??surrond_3
    389            {
    390                 show[a-1][b+1] = get_num(mine, a-1, b+1)+ '0';
   \   000000EC   0x....             LDR.N    R0,??DataTable8_3
   \   000000EE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000F0   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000000F4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000F6   0x182E             ADDS     R6,R5,R0
   \   000000F8   0x1C6A             ADDS     R2,R5,#+1
   \   000000FA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000FC   0x1E61             SUBS     R1,R4,#+1
   \   000000FE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000100   0x....             LDR.N    R0,??DataTable8_2
   \   00000102   0x.... 0x....      BL       get_num
   \   00000106   0x3030             ADDS     R0,R0,#+48
   \   00000108   0xF806 0x0C07      STRB     R0,[R6, #-7]
    391                             //      set_mine(mine);
    392                                  delay1(50);
   \   0000010C   0x2032             MOVS     R0,#+50
   \   0000010E   0x.... 0x....      BL       delay1
    393            }
    394            }
    395            if((b-1)>=0&&(a-1)>=0){
   \                     ??surrond_3: (+1)
   \   00000112   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000114   0x1E68             SUBS     R0,R5,#+1
   \   00000116   0x2800             CMP      R0,#+0
   \   00000118   0xD420             BMI.N    ??surrond_4
   \   0000011A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000011C   0x1E60             SUBS     R0,R4,#+1
   \   0000011E   0x2800             CMP      R0,#+0
   \   00000120   0xD41C             BMI.N    ??surrond_4
    396           if(mine[a-1][b-1] != '1')
   \   00000122   0x....             LDR.N    R0,??DataTable8_2
   \   00000124   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000126   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000012A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000012C   0x1828             ADDS     R0,R5,R0
   \   0000012E   0xF810 0x0C09      LDRB     R0,[R0, #-9]
   \   00000132   0x2831             CMP      R0,#+49
   \   00000134   0xD012             BEQ.N    ??surrond_4
    397            {
    398                 show[a-1][b-1] = get_num(mine, a-1, b-1)+ '0';
   \   00000136   0x....             LDR.N    R0,??DataTable8_3
   \   00000138   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000013A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000013E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000140   0x182E             ADDS     R6,R5,R0
   \   00000142   0x1E6A             SUBS     R2,R5,#+1
   \   00000144   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000146   0x1E61             SUBS     R1,R4,#+1
   \   00000148   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000014A   0x....             LDR.N    R0,??DataTable8_2
   \   0000014C   0x.... 0x....      BL       get_num
   \   00000150   0x3030             ADDS     R0,R0,#+48
   \   00000152   0xF806 0x0C09      STRB     R0,[R6, #-9]
    399                              //    set_mine(mine);
    400                                  delay1(50);
   \   00000156   0x2032             MOVS     R0,#+50
   \   00000158   0x.... 0x....      BL       delay1
    401            }  }
    402                  if((a+1)<=7&&(b-1)>=0){
   \                     ??surrond_4: (+1)
   \   0000015C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000015E   0x1C60             ADDS     R0,R4,#+1
   \   00000160   0x2808             CMP      R0,#+8
   \   00000162   0xDA1E             BGE.N    ??surrond_5
   \   00000164   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000166   0x1E68             SUBS     R0,R5,#+1
   \   00000168   0x2800             CMP      R0,#+0
   \   0000016A   0xD41A             BMI.N    ??surrond_5
    403           if(mine[a+1][b-1] != '1')
   \   0000016C   0x....             LDR.N    R0,??DataTable8_2
   \   0000016E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000170   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000174   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000176   0x1828             ADDS     R0,R5,R0
   \   00000178   0x79C0             LDRB     R0,[R0, #+7]
   \   0000017A   0x2831             CMP      R0,#+49
   \   0000017C   0xD011             BEQ.N    ??surrond_5
    404            {
    405                 show[a+1][b-1] = get_num(mine, a+1, b-1)+ '0';
   \   0000017E   0x....             LDR.N    R0,??DataTable8_3
   \   00000180   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000182   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000186   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000188   0x182E             ADDS     R6,R5,R0
   \   0000018A   0x1E6A             SUBS     R2,R5,#+1
   \   0000018C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000018E   0x1C61             ADDS     R1,R4,#+1
   \   00000190   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000192   0x....             LDR.N    R0,??DataTable8_2
   \   00000194   0x.... 0x....      BL       get_num
   \   00000198   0x3030             ADDS     R0,R0,#+48
   \   0000019A   0x71F0             STRB     R0,[R6, #+7]
    406                                //  set_mine(mine);
    407                                  delay1(50);
   \   0000019C   0x2032             MOVS     R0,#+50
   \   0000019E   0x.... 0x....      BL       delay1
    408            }} 
    409                  if((b-1)>=0){
   \                     ??surrond_5: (+1)
   \   000001A2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001A4   0x1E68             SUBS     R0,R5,#+1
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD41C             BMI.N    ??surrond_6
    410            if(mine[a][b-1] != '1')
   \   000001AA   0x....             LDR.N    R0,??DataTable8_2
   \   000001AC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001AE   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000001B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001B4   0x1828             ADDS     R0,R5,R0
   \   000001B6   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000001BA   0x2831             CMP      R0,#+49
   \   000001BC   0xD012             BEQ.N    ??surrond_6
    411            {
    412                 show[a][b-1] = get_num(mine, a, b-1)+ '0';
   \   000001BE   0x....             LDR.N    R0,??DataTable8_3
   \   000001C0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001C2   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000001C6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001C8   0x182E             ADDS     R6,R5,R0
   \   000001CA   0x1E6A             SUBS     R2,R5,#+1
   \   000001CC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000001CE   0x0021             MOVS     R1,R4
   \   000001D0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001D2   0x....             LDR.N    R0,??DataTable8_2
   \   000001D4   0x.... 0x....      BL       get_num
   \   000001D8   0x3030             ADDS     R0,R0,#+48
   \   000001DA   0xF806 0x0C01      STRB     R0,[R6, #-1]
    413                           //       set_mine(mine);
    414                                  delay1(50);
   \   000001DE   0x2032             MOVS     R0,#+50
   \   000001E0   0x.... 0x....      BL       delay1
    415            } }  if((a-1)>=0){
   \                     ??surrond_6: (+1)
   \   000001E4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001E6   0x1E60             SUBS     R0,R4,#+1
   \   000001E8   0x2800             CMP      R0,#+0
   \   000001EA   0xD41C             BMI.N    ??surrond_7
    416            if(mine[a-1][b] != '1')
   \   000001EC   0x....             LDR.N    R0,??DataTable8_2
   \   000001EE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001F0   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   000001F4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001F6   0x1828             ADDS     R0,R5,R0
   \   000001F8   0xF810 0x0C08      LDRB     R0,[R0, #-8]
   \   000001FC   0x2831             CMP      R0,#+49
   \   000001FE   0xD012             BEQ.N    ??surrond_7
    417            {
    418                 show[a-1][b] = get_num(mine, a-1, b)+ '0';
   \   00000200   0x....             LDR.N    R0,??DataTable8_3
   \   00000202   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000204   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   00000208   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000020A   0x182E             ADDS     R6,R5,R0
   \   0000020C   0x002A             MOVS     R2,R5
   \   0000020E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000210   0x1E61             SUBS     R1,R4,#+1
   \   00000212   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000214   0x....             LDR.N    R0,??DataTable8_2
   \   00000216   0x.... 0x....      BL       get_num
   \   0000021A   0x3030             ADDS     R0,R0,#+48
   \   0000021C   0xF806 0x0C08      STRB     R0,[R6, #-8]
    419                                //   set_mine(mine);
    420                                  delay1(50);
   \   00000220   0x2032             MOVS     R0,#+50
   \   00000222   0x.... 0x....      BL       delay1
    421            }
    422            }
    423               return;
   \                     ??surrond_7: (+1)
   \   00000226   0xBD70             POP      {R4-R6,PC}       ;; return
    424          
    425          }

   \                                 In section .text, align 2, keep-with-next
    426          void panduan(uint16 a, uint16 b) {
   \                     panduan: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    427              uint16 i, j;
    428              if (mine[a][b] != '1')
   \   00000006   0x....             LDR.N    R0,??DataTable8_2
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0xEB10 0x00C4      ADDS     R0,R0,R4, LSL #+3
   \   0000000E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000010   0x5C28             LDRB     R0,[R5, R0]
   \   00000012   0x2831             CMP      R0,#+49
   \   00000014   0xD064             BEQ.N    ??panduan_0
    429              {
    430              uint16 ret = get_num(mine, a, b);  
   \   00000016   0x002A             MOVS     R2,R5
   \   00000018   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001A   0x0021             MOVS     R1,R4
   \   0000001C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001E   0x....             LDR.N    R0,??DataTable8_2
   \   00000020   0x.... 0x....      BL       get_num
    431               if(ret!=0){    
   \   00000024   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD00A             BEQ.N    ??panduan_1
    432                                    show[a][b] = ret + '0';   //‘0'+1=‘1’
   \   0000002A   0x....             LDR.N    R1,??DataTable8_3
   \   0000002C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000002E   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   00000032   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000034   0x3030             ADDS     R0,R0,#+48
   \   00000036   0x5468             STRB     R0,[R5, R1]
    433                              //   set_mine(mine);
    434                                  delay1(10);
   \   00000038   0x200A             MOVS     R0,#+10
   \   0000003A   0x.... 0x....      BL       delay1
    435                                     return;
   \   0000003E   0xE04F             B.N      ??panduan_2
    436               }
    437               if(biaozhi<=80){
   \                     ??panduan_1: (+1)
   \   00000040   0x....             LDR.N    R1,??DataTable8_15
   \   00000042   0x8809             LDRH     R1,[R1, #+0]
   \   00000044   0x2951             CMP      R1,#+81
   \   00000046   0xDA4B             BGE.N    ??panduan_0
    438              if (ret==0) {    
   \   00000048   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD148             BNE.N    ??panduan_0
    439              show[a][b] = ret + '0';
   \   0000004E   0x....             LDR.N    R1,??DataTable8_3
   \   00000050   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000052   0xEB11 0x01C4      ADDS     R1,R1,R4, LSL #+3
   \   00000056   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000058   0x3030             ADDS     R0,R0,#+48
   \   0000005A   0x5468             STRB     R0,[R5, R1]
    440                  surrond(a, b);
   \   0000005C   0x0029             MOVS     R1,R5
   \   0000005E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000060   0x0020             MOVS     R0,R4
   \   00000062   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000064   0x.... 0x....      BL       surrond
    441                     biaozhi++;
   \   00000068   0x....             LDR.N    R0,??DataTable8_15
   \   0000006A   0x8800             LDRH     R0,[R0, #+0]
   \   0000006C   0x1C40             ADDS     R0,R0,#+1
   \   0000006E   0x....             LDR.N    R1,??DataTable8_15
   \   00000070   0x8008             STRH     R0,[R1, #+0]
    442                  if(a>=0&&a<=7&&b>=0&&b<=7)
   \   00000072   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000074   0x2C08             CMP      R4,#+8
   \   00000076   0xDA33             BGE.N    ??panduan_0
   \   00000078   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000007A   0x2D08             CMP      R5,#+8
   \   0000007C   0xDA30             BGE.N    ??panduan_0
    443                  for (i = -1; i <= 1; i++) {
   \   0000007E   0xF64F 0x76FF      MOVW     R6,#+65535
   \   00000082   0xE000             B.N      ??panduan_3
   \                     ??panduan_4: (+1)
   \   00000084   0x1C76             ADDS     R6,R6,#+1
   \                     ??panduan_3: (+1)
   \   00000086   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000088   0x2E02             CMP      R6,#+2
   \   0000008A   0xDA29             BGE.N    ??panduan_0
    444                      for (j = -1; j <= 1; j++) {
   \   0000008C   0xF64F 0x77FF      MOVW     R7,#+65535
   \   00000090   0xE01C             B.N      ??panduan_5
    445                     
    446                          if (i == 0 && j == 0) continue;
    447          
    448                         else if((a+i)>=0&&(a+i)<=7&&(b+j)>=0&&(b+j)<=7){
   \                     ??panduan_6: (+1)
   \   00000092   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000094   0xFA16 0xF084      UXTAH    R0,R6,R4
   \   00000098   0x1E00             SUBS     R0,R0,#+0
   \   0000009A   0x2808             CMP      R0,#+8
   \   0000009C   0xD215             BCS.N    ??panduan_7
   \   0000009E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000A0   0xFA17 0xF085      UXTAH    R0,R7,R5
   \   000000A4   0x1E00             SUBS     R0,R0,#+0
   \   000000A6   0x2808             CMP      R0,#+8
   \   000000A8   0xD20F             BCS.N    ??panduan_7
    449                               uint16 ret1 = get_num(mine, a+i, b+j);
   \   000000AA   0x197A             ADDS     R2,R7,R5
   \   000000AC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000AE   0x1931             ADDS     R1,R6,R4
   \   000000B0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000B2   0x....             LDR.N    R0,??DataTable8_2
   \   000000B4   0x.... 0x....      BL       get_num
    450                               if(ret1==0){
   \   000000B8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000BA   0x2800             CMP      R0,#+0
   \   000000BC   0xD105             BNE.N    ??panduan_7
    451                      panduan(a + i, b + j);
   \   000000BE   0x1979             ADDS     R1,R7,R5
   \   000000C0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000000C2   0x1930             ADDS     R0,R6,R4
   \   000000C4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000C6   0xF7FF 0xFF9B      BL       panduan
    452                          }  
    453                         }
   \                     ??panduan_7: (+1)
   \   000000CA   0x1C7F             ADDS     R7,R7,#+1
   \                     ??panduan_5: (+1)
   \   000000CC   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000CE   0x2F02             CMP      R7,#+2
   \   000000D0   0xDAD8             BGE.N    ??panduan_4
   \   000000D2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000D4   0x2E00             CMP      R6,#+0
   \   000000D6   0xD1DC             BNE.N    ??panduan_6
   \   000000D8   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000DA   0x2F00             CMP      R7,#+0
   \   000000DC   0xD1D9             BNE.N    ??panduan_6
   \   000000DE   0xE7F4             B.N      ??panduan_7
    454                      }
    455                  }
    456              }
    457              }
    458              }
    459              return;
   \                     ??panduan_0: (+1)
   \                     ??panduan_2: (+1)
   \   000000E0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    460          } 

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x2A 0x00          DC8      "*",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x25 0x64          DC8      0x25, 0x64, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     gamestart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     gameoversl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     mine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     show

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     kaiguan

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     t1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     t2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     cit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     gameing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     timesl

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     k

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     ti

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     biaozhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     ct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     t6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     t5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     t4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     t3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x........         DC32     counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x........         DC32     count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     `b`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     key_up

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x........         DC32     key_down

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     key_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x........         DC32     key_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x........         DC32     g

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x4003B000         DC32     0x4003b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \   00000000   0x........         DC32     result1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \   00000000   0x........         DC32     result

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \   00000000   0x........         DC32     f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x64          DC8 "%d"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 2
   \   00000000   0x2A 0x00          DC8 "*"

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x79 0x6F          DC8 "you are a "
   \              0x75 0x20    
   \              0x61 0x72    
   \              0x65 0x20    
   \              0x61 0x20    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x20 0x77          DC8 " winner "
   \              0x69 0x6E    
   \              0x6E 0x65    
   \              0x72 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x74 0x72          DC8 "try again ! "
   \              0x79 0x20    
   \              0x61 0x67    
   \              0x61 0x69    
   \              0x6E 0x20    
   \              0x21 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x79 0x6F          DC8 "you are out of "
   \              0x75 0x20    
   \              0x61 0x72    
   \              0x65 0x20    
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x6F 0x66    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x20 0x74          DC8 " time "
   \              0x69 0x6D    
   \              0x65 0x20    
   \              0x00         
   \   00000007   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Game
        16   -> Sweep
        16   -> display
        16   -> kongzhi
        16   -> set_mine
        16   -> time1
       8   Sweep
         8   -> LCD_CLS
         8   -> LCD_P14x16Ch
         8   -> LCD_P8x16Str
         8   -> delay1
         8   -> display
         8   -> sprintf
       0   delay1
      16   display
        16   -> LCD_P6x8Str
       4   get_num
       8   kongzhi
         8   -> LPLD_ADC_Get
         8   -> delay1
       0   menu
      24   panduan
        24   -> delay1
        24   -> get_num
        24   -> panduan
        24   -> surrond
       8   saolei
         8   -> Game
         8   -> LCD_CLS
         8   -> LCD_P8x8Ch
         8   -> delay
         8   -> menu
         8   -> pit_init
       8   set_mine
         8   -> LPLD_ADC_Get
         8   -> delay1
      16   surrond
        16   -> delay1
        16   -> get_num
       8   time1
         8   -> LCD_CLS
         8   -> LCD_P14x16Ch
         8   -> LCD_P8x16Str
         8   -> delay1
         8   -> sprintf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable5
       4  ??DataTable7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
       4  ?_0
       2  ?_1
      12  ?_2
      12  ?_3
      16  ?_4
      16  ?_5
       8  ?_6
      48  Game
     638  Sweep
       2  a
       2  b
       2  biaozhi
       2  cit
       2  count
       2  counter
       2  ct
      38  delay1
      72  display
       2  f
       2  g
       2  gameoversl
     260  get_num
       2  k
       8  kaiguan
     402  kongzhi
       4  menu
      64  mine
     226  panduan
       2  s
     344  saolei
     154  set_mine
      64  show
     552  surrond
       2  t
       2  t1
       2  t2
       2  t3
       2  t4
       2  t5
       2  t6
       2  ti
     160  time1
       2  timesl
       2  x
       2  y

 
   174 bytes in section .bss
     8 bytes in section .data
    70 bytes in section .rodata
 3 074 bytes in section .text
 
 3 074 bytes of CODE  memory
    70 bytes of CONST memory
   182 bytes of DATA  memory

Errors: none
Warnings: 4

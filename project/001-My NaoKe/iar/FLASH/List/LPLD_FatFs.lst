###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.5.7591/W32 for ARM        14/May/2019  19:13:49
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  D:\2019.IAR\project\001-My NaoKe\app\LPLD_FatFs.c
#    Command line =  
#        "D:\2019.IAR\project\001-My NaoKe\app\LPLD_FatFs.c" -D LPLD_K60 -lCN
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\" -lB
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\" -o
#        "D:\2019.IAR\project\001-My NaoKe\iar\FLASH\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "D:\Embedded Workbench 7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\app\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\CPU\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\common\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\HW\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\LPLD\DEV\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\uCOS-II\Ports\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\uCOS-II\Source\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\FatFs\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\FatFs\option\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\common\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\driver\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\descriptor\" -I
#        "D:\2019.IAR\project\001-My NaoKe\iar\..\..\..\lib\USB\class\" -Ol -I
#        "D:\Embedded Workbench 7.0\arm\CMSIS\Include\" -D ARM_MATH_CM4
#    List file    =  
#        D:\2019.IAR\project\001-My NaoKe\iar\FLASH\List\LPLD_FatFs.lst
#    Object file  =  
#        D:\2019.IAR\project\001-My NaoKe\iar\FLASH\Obj\LPLD_FatFs.o
#
###############################################################################

D:\2019.IAR\project\001-My NaoKe\app\LPLD_FatFs.c
      1          #include "common.h"
      2          #include "LQ12864.h"
      3          #include "yingjian.h"
      4          #include "jianmian.h"
      5          #include "tuixiangzi.h"
      6          #include "saolei.h"
      7          #include "wuziqi.h"
      8          #include "huatu.h"
      9          //#include "wavplay.h"  软解失败
     10          void start_pic(void);//开始界面
     11          void readsd(void);
     12          void die(FRESULT rc);
     13          DWORD get_fattime (void);// 用户自定义的为FatFs系统提供实时时间的函数
     14          void badapple(uint8 spshu);//视频播放
     15          //void music(void);//音乐播放
     16          void huatu(void);//自定义地图功能
     17          void flash_start(void);//视频播放选择界面
     18          // 以下变量定义均采用FatFs文件系统变量类型

   \                                 In section .bss, align 1
     19          FRESULT rc;     //结果代码
   \                     rc:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     20          FATFS fatfs,*fs;      // 文件系统对象
   \                     fatfs:
   \   00000000                      DS8 568

   \                                 In section .bss, align 4
   \                     fs:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          FIL fil;      // 文件对象
   \                     fil:
   \   00000000                      DS8 556

   \                                 In section .bss, align 4
     22          UINT bw, br;
   \                     bw:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     br:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          unsigned char buff_86[688],buff_114[912];//86*64分辨率|114*64分辨率
   \                     buff_86:
   \   00000000                      DS8 688

   \                                 In section .bss, align 4
   \                     buff_114:
   \   00000000                      DS8 912
     24          //通用标志位

   \                                 In section .bss, align 2
     25          uint16 result,result1;//储存ADC模块的采集数据
   \                     result:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     result1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     26          uint16 key_up,key_down,key_left,key_right;//
   \                     key_up:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     key_down:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     key_left:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     key_right:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     27          uint16 mosixuanzi=1;
   \                     mosixuanzi:
   \   00000000   0x0001             DC16 1

   \                                 In section .bss, align 2
     28          uint16 gamestart=0,gameing=0;
   \                     gamestart:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     gameing:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
     29          uint8 badapple_time=1;
   \                     badapple_time:
   \   00000000   0x01               DC8 1
     30          //傻吊汪酱标志位

   \                                 In section .data, align 2
     31          uint16 flag=1;//返回
   \                     flag:
   \   00000000   0x0001             DC16 1

   \                                 In section .bss, align 2
     32          uint16 flag1=0,flag2=0;
   \                     flag1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     flag2:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     33          uint16 time=60;
   \                     time:
   \   00000000   0x003C             DC16 60

   \                                 In section .bss, align 2
     34          uint16 timeflag=0;
   \                     timeflag:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     35          uint16 gameover=0;
   \                     gameover:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     36          uint8 wj_wzq=0;
   \                     wj_wzq:
   \   00000000                      DS8 1
     37          

   \                                 In section .text, align 2, keep-with-next
     38          void main (void){
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     39            init_gpio();//初始化gpio口
   \   00000002   0x.... 0x....      BL       init_gpio
     40            LCD_Init();//初始化OLED
   \   00000006   0x.... 0x....      BL       LCD_Init
     41            adc_init();//初始化ADC
   \   0000000A   0x.... 0x....      BL       adc_init
     42            pit_init();
   \   0000000E   0x.... 0x....      BL       pit_init
     43            pwm_init();//初始化PWM
   \   00000012   0x.... 0x....      BL       pwm_init
     44            //dac_init();//初始化DAC模块
     45            start_pic();
   \   00000016   0x.... 0x....      BL       start_pic
   \   0000001A   0xE00B             B.N      ??main_0
     46            //gameing=1;mosixuanzi=6;gamestart=1;
     47            //huatu();
     48            while(1){
     49              jianmian();
     50              if(gamestart==1)
     51              switch(mosixuanzi){
     52                case 1:gameover=0;tuixiangzi();break;
     53                case 2:gamestart=1;gameing=1;saolei();break;
     54                case 3:gameing=0;wj_wzq=1;wuziqi();wj_wzq=0;break;
     55                case 4:gamestart=1;gameing=0;flash_start();break;
     56                case 5:gamestart=1;gameing=0;xtjianmian();break;
   \                     ??main_1: (+1)
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000022   0x8008             STRH     R0,[R1, #+0]
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000002A   0x8008             STRH     R0,[R1, #+0]
   \   0000002C   0x.... 0x....      BL       xtjianmian
     57              }
     58              LCD_CLS();
   \                     ??main_2: (+1)
   \   00000030   0x.... 0x....      BL       LCD_CLS
   \                     ??main_0: (+1)
   \   00000034   0x.... 0x....      BL       jianmian
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000003C   0x8800             LDRH     R0,[R0, #+0]
   \   0000003E   0x2801             CMP      R0,#+1
   \   00000040   0xD1F6             BNE.N    ??main_2
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000046   0x8800             LDRH     R0,[R0, #+0]
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD007             BEQ.N    ??main_3
   \   0000004C   0xD3F0             BCC.N    ??main_2
   \   0000004E   0x2803             CMP      R0,#+3
   \   00000050   0xD016             BEQ.N    ??main_4
   \   00000052   0xD30A             BCC.N    ??main_5
   \   00000054   0x2805             CMP      R0,#+5
   \   00000056   0xD0E1             BEQ.N    ??main_1
   \   00000058   0xD321             BCC.N    ??main_6
   \   0000005A   0xE7E9             B.N      ??main_2
   \                     ??main_3: (+1)
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000062   0x8008             STRH     R0,[R1, #+0]
   \   00000064   0x.... 0x....      BL       tuixiangzi
   \   00000068   0xE7E2             B.N      ??main_2
   \                     ??main_5: (+1)
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000070   0x8008             STRH     R0,[R1, #+0]
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000078   0x8008             STRH     R0,[R1, #+0]
   \   0000007A   0x.... 0x....      BL       saolei
   \   0000007E   0xE7D7             B.N      ??main_2
   \                     ??main_4: (+1)
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000086   0x8008             STRH     R0,[R1, #+0]
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
   \   00000090   0x.... 0x....      BL       wuziqi
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000009A   0x7008             STRB     R0,[R1, #+0]
   \   0000009C   0xE7C8             B.N      ??main_2
   \                     ??main_6: (+1)
   \   0000009E   0x2001             MOVS     R0,#+1
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000000A4   0x8008             STRH     R0,[R1, #+0]
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000000AC   0x8008             STRH     R0,[R1, #+0]
   \   000000AE   0x.... 0x....      BL       flash_start
   \   000000B2   0xE7BD             B.N      ??main_2
     59            }
     60          }
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void start_pic(void){
   \                     start_pic: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     63          	gameover=1;
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000008   0x8008             STRH     R0,[R1, #+0]
     64            uint16 pic=1;
   \   0000000A   0x2401             MOVS     R4,#+1
     65            LCD_CLS();
   \   0000000C   0x.... 0x....      BL       LCD_CLS
     66            //LCD_P128x64Ch();
     67            for(uint8 i=0;i<6;i++)//图形交互系统
   \   00000010   0x2500             MOVS     R5,#+0
   \   00000012   0xE00A             B.N      ??start_pic_0
     68              LCD_P14x16Ch(i*16+10,0,i+66);
   \                     ??start_pic_1: (+1)
   \   00000014   0xF115 0x0242      ADDS     R2,R5,#+66
   \   00000018   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x0128             LSLS     R0,R5,#+4
   \   00000020   0x300A             ADDS     R0,R0,#+10
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       LCD_P14x16Ch
   \   00000028   0x1C6D             ADDS     R5,R5,#+1
   \                     ??start_pic_0: (+1)
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x2D06             CMP      R5,#+6
   \   0000002E   0xDBF1             BLT.N    ??start_pic_1
     69          
     70            for(uint8 i=0;i<4;i++)//指导老师
   \   00000030   0x2500             MOVS     R5,#+0
   \   00000032   0xE00A             B.N      ??start_pic_2
     71              LCD_P14x16Ch(i*15,4,i+66+6);
   \                     ??start_pic_3: (+1)
   \   00000034   0xF115 0x0248      ADDS     R2,R5,#+72
   \   00000038   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003A   0x2104             MOVS     R1,#+4
   \   0000003C   0x200F             MOVS     R0,#+15
   \   0000003E   0xFB15 0xF000      SMULBB   R0,R5,R0
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       LCD_P14x16Ch
   \   00000048   0x1C6D             ADDS     R5,R5,#+1
   \                     ??start_pic_2: (+1)
   \   0000004A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004C   0x2D04             CMP      R5,#+4
   \   0000004E   0xDBF1             BLT.N    ??start_pic_3
     72            for(uint8 i=0;i<2;i++)//11
   \   00000050   0x2500             MOVS     R5,#+0
   \   00000052   0xE00C             B.N      ??start_pic_4
     73              LCD_P14x16Ch(i*22+15*4+14,4,i+66+10);
   \                     ??start_pic_5: (+1)
   \   00000054   0xF115 0x024C      ADDS     R2,R5,#+76
   \   00000058   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005A   0x2104             MOVS     R1,#+4
   \   0000005C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005E   0x2016             MOVS     R0,#+22
   \   00000060   0xFB00 0xF005      MUL      R0,R0,R5
   \   00000064   0x304A             ADDS     R0,R0,#+74
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x.... 0x....      BL       LCD_P14x16Ch
   \   0000006C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??start_pic_4: (+1)
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0x2D02             CMP      R5,#+2
   \   00000072   0xDBEF             BLT.N    ??start_pic_5
     74          
     75            for(uint8 i=0;i<3;i++)//汇报人
   \   00000074   0x2500             MOVS     R5,#+0
   \   00000076   0xE00A             B.N      ??start_pic_6
     76              LCD_P14x16Ch(i*18,6,i+66+12);
   \                     ??start_pic_7: (+1)
   \   00000078   0xF115 0x024E      ADDS     R2,R5,#+78
   \   0000007C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000007E   0x2106             MOVS     R1,#+6
   \   00000080   0x2012             MOVS     R0,#+18
   \   00000082   0xFB15 0xF000      SMULBB   R0,R5,R0
   \   00000086   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000088   0x.... 0x....      BL       LCD_P14x16Ch
   \   0000008C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??start_pic_6: (+1)
   \   0000008E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000090   0x2D03             CMP      R5,#+3
   \   00000092   0xDBF1             BLT.N    ??start_pic_7
     77            for(uint8 i=0;i<3;i++)//111
   \   00000094   0x2500             MOVS     R5,#+0
   \   00000096   0xE00C             B.N      ??start_pic_8
     78              LCD_P14x16Ch(i*15+15*4+14,6,i+66+15);
   \                     ??start_pic_9: (+1)
   \   00000098   0xF115 0x0251      ADDS     R2,R5,#+81
   \   0000009C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009E   0x2106             MOVS     R1,#+6
   \   000000A0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A2   0x200F             MOVS     R0,#+15
   \   000000A4   0xFB00 0xF005      MUL      R0,R0,R5
   \   000000A8   0x304A             ADDS     R0,R0,#+74
   \   000000AA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000AC   0x.... 0x....      BL       LCD_P14x16Ch
   \   000000B0   0x1C6D             ADDS     R5,R5,#+1
   \                     ??start_pic_8: (+1)
   \   000000B2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B4   0x2D03             CMP      R5,#+3
   \   000000B6   0xDBEF             BLT.N    ??start_pic_9
     79              LCD_P8x16Str(58,4,":");
   \   000000B8   0x....             ADR.N    R2,??DataTable4  ;; ":"
   \   000000BA   0x2104             MOVS     R1,#+4
   \   000000BC   0x203A             MOVS     R0,#+58
   \   000000BE   0x.... 0x....      BL       LCD_P8x16Str
     80              LCD_P8x16Str(16*3,6,":");
   \   000000C2   0x....             ADR.N    R2,??DataTable4  ;; ":"
   \   000000C4   0x2106             MOVS     R1,#+6
   \   000000C6   0x2030             MOVS     R0,#+48
   \   000000C8   0x.... 0x....      BL       LCD_P8x16Str
   \   000000CC   0xE01A             B.N      ??start_pic_10
     81          
     82            while(pic){
     83            key();
   \                     ??start_pic_11: (+1)
   \   000000CE   0x.... 0x....      BL       key
     84            if(key_up==0||key_down==0){
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000D6   0x8800             LDRH     R0,[R0, #+0]
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD004             BEQ.N    ??start_pic_12
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000E0   0x8800             LDRH     R0,[R0, #+0]
   \   000000E2   0x2800             CMP      R0,#+0
   \   000000E4   0xD10E             BNE.N    ??start_pic_10
     85                delay(500);
   \                     ??start_pic_12: (+1)
   \   000000E6   0xF44F 0x70FA      MOV      R0,#+500
   \   000000EA   0x.... 0x....      BL       delay
     86                if(key_up==0||key_down==0){
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000F2   0x8800             LDRH     R0,[R0, #+0]
   \   000000F4   0x2800             CMP      R0,#+0
   \   000000F6   0xD004             BEQ.N    ??start_pic_13
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000000FC   0x8800             LDRH     R0,[R0, #+0]
   \   000000FE   0x2800             CMP      R0,#+0
   \   00000100   0xD100             BNE.N    ??start_pic_10
     87                  pic=0;
   \                     ??start_pic_13: (+1)
   \   00000102   0x2400             MOVS     R4,#+0
     88                }
     89              }
     90          }
   \                     ??start_pic_10: (+1)
   \   00000104   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000106   0x2C00             CMP      R4,#+0
   \   00000108   0xD1E1             BNE.N    ??start_pic_11
     91          while(1){
     92          	key();
   \                     ??start_pic_14: (+1)
   \   0000010A   0x.... 0x....      BL       key
     93          	if(key_up==1&&key_down==1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000112   0x8800             LDRH     R0,[R0, #+0]
   \   00000114   0x2801             CMP      R0,#+1
   \   00000116   0xD108             BNE.N    ??start_pic_15
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000011C   0x8800             LDRH     R0,[R0, #+0]
   \   0000011E   0x2801             CMP      R0,#+1
   \   00000120   0xD103             BNE.N    ??start_pic_15
     94          		delay(500);
   \   00000122   0xF44F 0x70FA      MOV      R0,#+500
   \   00000126   0x.... 0x....      BL       delay
     95                if(key_up==1&&key_down==1)
   \                     ??start_pic_15: (+1)
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000012E   0x8800             LDRH     R0,[R0, #+0]
   \   00000130   0x2801             CMP      R0,#+1
   \   00000132   0xD1EA             BNE.N    ??start_pic_14
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000138   0x8800             LDRH     R0,[R0, #+0]
   \   0000013A   0x2801             CMP      R0,#+1
   \   0000013C   0xD1E5             BNE.N    ??start_pic_14
     96                	break;
     97          }
     98            LCD_CLS();
   \   0000013E   0x.... 0x....      BL       LCD_CLS
     99          }
   \   00000142   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    100          

   \                                 In section .text, align 2, keep-with-next
    101          void die(FRESULT rc)
    102          {
   \                     die: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    103            //printf("错误代码 rc=%u.\n", rc);
    104            LCD_P8x16Str(30,2,"SD Error!");
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable6_7
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x201E             MOVS     R0,#+30
   \   0000000A   0x.... 0x....      BL       LCD_P8x16Str
    105            LCD_P8x16Str(30,4,"Check it");
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   00000012   0x2104             MOVS     R1,#+4
   \   00000014   0x201E             MOVS     R0,#+30
   \   00000016   0x.... 0x....      BL       LCD_P8x16Str
    106            rc = f_close(&fil);
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000001E   0x.... 0x....      BL       f_close
   \   00000022   0x0004             MOVS     R4,R0
    107            f_mount(0,NULL);
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      BL       f_mount
    108            while(1);
   \                     ??die_0: (+1)
   \   0000002C   0xE7FE             B.N      ??die_0
    109          }
    110          // 用户自定义的为FatFs系统提供实时时间的函数

   \                                 In section .text, align 2, keep-with-next
    111          DWORD get_fattime (void)
    112          {
    113            return ((DWORD)(2018 - 1980) << 25) //2018年
    114                 | ((DWORD)12 << 21)               //12月
    115                 | ((DWORD)12 << 16)              //12日
    116                 | ((DWORD)0 << 11)
    117                 | ((DWORD)0 << 5)
    118                 | ((DWORD)0 >> 1);
   \                     get_fattime: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable6_10  ;; 0x4d8c0000
   \   00000004   0x4770             BX       LR               ;; return
    119          }
    120          

   \                                 In section .text, align 2, keep-with-next
    121          void readsd(void)
    122          {
   \                     readsd: (+1)
   \   00000000   0xB53E             PUSH     {R1-R5,LR}
    123            DWORD fre_clust,fre_sect,tot_sect;
    124            unsigned char s[]="00000";
   \   00000002   0xA800             ADD      R0,SP,#+0
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable6_11
   \   00000008   0x2206             MOVS     R2,#+6
   \   0000000A   0x.... 0x....      BL       __aeabi_memcpy
    125            // 注册一个磁盘工作区
    126             f_mount(0,&fatfs);
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6_12
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       f_mount
    127             //printf("\n读取容量.\n");
    128             rc = f_getfree("0:", &fre_clust, &fs);
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable6_13
   \   0000001C   0xA902             ADD      R1,SP,#+8
   \   0000001E   0x....             ADR.N    R0,??DataTable5  ;; 0x30, 0x3A, 0x00, 0x00
   \   00000020   0x.... 0x....      BL       f_getfree
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable6_14
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    129             if (rc) die(rc);
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD004             BEQ.N    ??readsd_0
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       die
    130             /* Get total sectors and free sectors */
    131             tot_sect=(fs->n_fatent-2)*fs->csize;
   \                     ??readsd_0: (+1)
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable6_13
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x69C0             LDR      R0,[R0, #+28]
   \   00000046   0x1E80             SUBS     R0,R0,#+2
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable6_13
   \   0000004C   0x6809             LDR      R1,[R1, #+0]
   \   0000004E   0x7889             LDRB     R1,[R1, #+2]
   \   00000050   0xFB01 0xF400      MUL      R4,R1,R0
    132             fre_sect=fre_clust*fs->csize;
   \   00000054   0x9802             LDR      R0,[SP, #+8]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable6_13
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x7889             LDRB     R1,[R1, #+2]
   \   0000005E   0xFB01 0xF500      MUL      R5,R1,R0
    133             LCD_P14x16Ch(6,2,46);
   \   00000062   0x222E             MOVS     R2,#+46
   \   00000064   0x2102             MOVS     R1,#+2
   \   00000066   0x2006             MOVS     R0,#+6
   \   00000068   0x.... 0x....      BL       LCD_P14x16Ch
    134             LCD_P14x16Ch(30-10,2,42);
   \   0000006C   0x222A             MOVS     R2,#+42
   \   0000006E   0x2102             MOVS     R1,#+2
   \   00000070   0x2014             MOVS     R0,#+20
   \   00000072   0x.... 0x....      BL       LCD_P14x16Ch
    135             LCD_P14x16Ch(44-10,2,43);
   \   00000076   0x222B             MOVS     R2,#+43
   \   00000078   0x2102             MOVS     R1,#+2
   \   0000007A   0x2022             MOVS     R0,#+34
   \   0000007C   0x.... 0x....      BL       LCD_P14x16Ch
    136             LCD_P8x16Str(59-10,2,":");
   \   00000080   0x....             ADR.N    R2,??DataTable4  ;; ":"
   \   00000082   0x2102             MOVS     R1,#+2
   \   00000084   0x2031             MOVS     R0,#+49
   \   00000086   0x.... 0x....      BL       LCD_P8x16Str
    137             LCD_P14x16Ch(30-10,4,44);
   \   0000008A   0x222C             MOVS     R2,#+44
   \   0000008C   0x2104             MOVS     R1,#+4
   \   0000008E   0x2014             MOVS     R0,#+20
   \   00000090   0x.... 0x....      BL       LCD_P14x16Ch
    138             LCD_P14x16Ch(44-10,4,45);
   \   00000094   0x222D             MOVS     R2,#+45
   \   00000096   0x2104             MOVS     R1,#+4
   \   00000098   0x2022             MOVS     R0,#+34
   \   0000009A   0x.... 0x....      BL       LCD_P14x16Ch
    139             LCD_P8x16Str(59-10,4,":");
   \   0000009E   0x....             ADR.N    R2,??DataTable4  ;; ":"
   \   000000A0   0x2104             MOVS     R1,#+4
   \   000000A2   0x2031             MOVS     R0,#+49
   \   000000A4   0x.... 0x....      BL       LCD_P8x16Str
    140              s[0]=(int)((fre_sect/2/1024))/10000+48;
   \   000000A8   0x0AE8             LSRS     R0,R5,#+11
   \   000000AA   0xF242 0x7110      MOVW     R1,#+10000
   \   000000AE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000B2   0x3030             ADDS     R0,R0,#+48
   \   000000B4   0xF88D 0x0000      STRB     R0,[SP, #+0]
    141              s[1]=(int)((fre_sect/2/1024))/1000%10+48;
   \   000000B8   0x0AE8             LSRS     R0,R5,#+11
   \   000000BA   0xF44F 0x717A      MOV      R1,#+1000
   \   000000BE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000C2   0x210A             MOVS     R1,#+10
   \   000000C4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000C8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000CC   0x3030             ADDS     R0,R0,#+48
   \   000000CE   0xF88D 0x0001      STRB     R0,[SP, #+1]
    142              s[2]=(int)((fre_sect/2/1024))/100%10+48;
   \   000000D2   0x0AE8             LSRS     R0,R5,#+11
   \   000000D4   0x2164             MOVS     R1,#+100
   \   000000D6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000DA   0x210A             MOVS     R1,#+10
   \   000000DC   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000E0   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000E4   0x3030             ADDS     R0,R0,#+48
   \   000000E6   0xF88D 0x0002      STRB     R0,[SP, #+2]
    143              s[3]=(int)((fre_sect/2/1024))/10%10+48;
   \   000000EA   0x0AE8             LSRS     R0,R5,#+11
   \   000000EC   0x210A             MOVS     R1,#+10
   \   000000EE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F2   0x210A             MOVS     R1,#+10
   \   000000F4   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000F8   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000FC   0x3030             ADDS     R0,R0,#+48
   \   000000FE   0xF88D 0x0003      STRB     R0,[SP, #+3]
    144              s[4]=(int)((fre_sect/2/1024))%10+48;
   \   00000102   0x0AE8             LSRS     R0,R5,#+11
   \   00000104   0x210A             MOVS     R1,#+10
   \   00000106   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000010A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000010E   0x3030             ADDS     R0,R0,#+48
   \   00000110   0xF88D 0x0004      STRB     R0,[SP, #+4]
    145              LCD_P8x16Str(58,4,s);
   \   00000114   0xAA00             ADD      R2,SP,#+0
   \   00000116   0x2104             MOVS     R1,#+4
   \   00000118   0x203A             MOVS     R0,#+58
   \   0000011A   0x.... 0x....      BL       LCD_P8x16Str
    146              LCD_P8x16Str(58+5*8,2,"MB");
   \   0000011E   0x....             ADR.N    R2,??DataTable5_1  ;; 0x4D, 0x42, 0x00, 0x00
   \   00000120   0x2102             MOVS     R1,#+2
   \   00000122   0x2062             MOVS     R0,#+98
   \   00000124   0x.... 0x....      BL       LCD_P8x16Str
    147              s[0]=(int)((tot_sect/2/1024))/10000+48;
   \   00000128   0x0AE0             LSRS     R0,R4,#+11
   \   0000012A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000012E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000132   0x3030             ADDS     R0,R0,#+48
   \   00000134   0xF88D 0x0000      STRB     R0,[SP, #+0]
    148              s[1]=(int)((tot_sect/2/1024))/1000%10+48;
   \   00000138   0x0AE0             LSRS     R0,R4,#+11
   \   0000013A   0xF44F 0x717A      MOV      R1,#+1000
   \   0000013E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000142   0x210A             MOVS     R1,#+10
   \   00000144   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000148   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000014C   0x3030             ADDS     R0,R0,#+48
   \   0000014E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    149              s[2]=(int)((tot_sect/2/1024))/100%10+48;
   \   00000152   0x0AE0             LSRS     R0,R4,#+11
   \   00000154   0x2164             MOVS     R1,#+100
   \   00000156   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000015A   0x210A             MOVS     R1,#+10
   \   0000015C   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000160   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000164   0x3030             ADDS     R0,R0,#+48
   \   00000166   0xF88D 0x0002      STRB     R0,[SP, #+2]
    150              s[3]=(int)((tot_sect/2/1024))/10%10+48;
   \   0000016A   0x0AE0             LSRS     R0,R4,#+11
   \   0000016C   0x210A             MOVS     R1,#+10
   \   0000016E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000172   0x210A             MOVS     R1,#+10
   \   00000174   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   00000178   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000017C   0x3030             ADDS     R0,R0,#+48
   \   0000017E   0xF88D 0x0003      STRB     R0,[SP, #+3]
    151              s[4]=(int)((tot_sect/2/1024))%10+48;
   \   00000182   0x0AE0             LSRS     R0,R4,#+11
   \   00000184   0x210A             MOVS     R1,#+10
   \   00000186   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   0000018A   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   0000018E   0x3030             ADDS     R0,R0,#+48
   \   00000190   0xF88D 0x0004      STRB     R0,[SP, #+4]
    152              LCD_P8x16Str(58,2,s);
   \   00000194   0xAA00             ADD      R2,SP,#+0
   \   00000196   0x2102             MOVS     R1,#+2
   \   00000198   0x203A             MOVS     R0,#+58
   \   0000019A   0x.... 0x....      BL       LCD_P8x16Str
    153              LCD_P8x16Str(58+5*8,4,"MB");
   \   0000019E   0x....             ADR.N    R2,??DataTable5_1  ;; 0x4D, 0x42, 0x00, 0x00
   \   000001A0   0x2104             MOVS     R1,#+4
   \   000001A2   0x2062             MOVS     R0,#+98
   \   000001A4   0x.... 0x....      BL       LCD_P8x16Str
    154              //printf("%lu MB total drive space.\n""%lu MB available.\n",fre_sect/2/1024,tot_sect/2/1024);
    155              while(gamestart);
   \                     ??readsd_1: (+1)
   \   000001A8   0x....             LDR.N    R0,??DataTable6
   \   000001AA   0x8800             LDRH     R0,[R0, #+0]
   \   000001AC   0x2800             CMP      R0,#+0
   \   000001AE   0xD1FB             BNE.N    ??readsd_1
    156              f_close(&fil);
   \   000001B0   0x....             LDR.N    R0,??DataTable6_9
   \   000001B2   0x.... 0x....      BL       f_close
    157              if (rc) die(rc);
   \   000001B6   0x....             LDR.N    R0,??DataTable6_14
   \   000001B8   0x7800             LDRB     R0,[R0, #+0]
   \   000001BA   0x2800             CMP      R0,#+0
   \   000001BC   0xD003             BEQ.N    ??readsd_2
   \   000001BE   0x....             LDR.N    R0,??DataTable6_14
   \   000001C0   0x7800             LDRB     R0,[R0, #+0]
   \   000001C2   0x.... 0x....      BL       die
    158              f_mount(0,NULL);
   \                     ??readsd_2: (+1)
   \   000001C6   0x2100             MOVS     R1,#+0
   \   000001C8   0x2000             MOVS     R0,#+0
   \   000001CA   0x.... 0x....      BL       f_mount
    159          }
   \   000001CE   0xBD37             POP      {R0-R2,R4,R5,PC}  ;; return
    160          

   \                                 In section .text, align 2, keep-with-next
    161          void badapple(uint8 spshu){
   \                     badapple: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    162            uint16 i;
    163            // 注册一个磁盘工作区
    164            //printf("1\n");
    165            rc=f_mount(0,&fatfs);
   \   00000004   0x....             LDR.N    R1,??DataTable6_12
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       f_mount
   \   0000000C   0x....             LDR.N    R1,??DataTable6_14
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    166            if (rc) die(rc);
   \   00000010   0x....             LDR.N    R0,??DataTable6_14
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD003             BEQ.N    ??badapple_0
   \   00000018   0x....             LDR.N    R0,??DataTable6_14
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       die
    167            //打开的文件
    168            //printf("2\n");
    169            switch(spshu){
   \                     ??badapple_0: (+1)
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0x2801             CMP      R0,#+1
   \   00000026   0xD002             BEQ.N    ??badapple_1
   \   00000028   0x2802             CMP      R0,#+2
   \   0000002A   0xD010             BEQ.N    ??badapple_2
   \   0000002C   0xE01E             B.N      ??badapple_3
    170              case 1:rc=f_open(&fil, "0:/cartoon/badapple.bin", FA_READ);
   \                     ??badapple_1: (+1)
   \   0000002E   0x2201             MOVS     R2,#+1
   \   00000030   0x....             LDR.N    R1,??DataTable6_15
   \   00000032   0x....             LDR.N    R0,??DataTable6_9
   \   00000034   0x.... 0x....      BL       f_open
   \   00000038   0x....             LDR.N    R1,??DataTable6_14
   \   0000003A   0x7008             STRB     R0,[R1, #+0]
    171                    if (rc) die(rc);
   \   0000003C   0x....             LDR.N    R0,??DataTable6_14
   \   0000003E   0x7800             LDRB     R0,[R0, #+0]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD003             BEQ.N    ??badapple_4
   \   00000044   0x....             LDR.N    R0,??DataTable6_14
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x.... 0x....      BL       die
    172                    break;
   \                     ??badapple_4: (+1)
   \   0000004C   0xE00E             B.N      ??badapple_3
    173              case 2:rc=f_open(&fil, "0:/cartoon/jljt.bin", FA_READ);
   \                     ??badapple_2: (+1)
   \   0000004E   0x2201             MOVS     R2,#+1
   \   00000050   0x....             LDR.N    R1,??DataTable6_16
   \   00000052   0x....             LDR.N    R0,??DataTable6_9
   \   00000054   0x.... 0x....      BL       f_open
   \   00000058   0x....             LDR.N    R1,??DataTable6_14
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
    174                    if (rc) die(rc);
   \   0000005C   0x....             LDR.N    R0,??DataTable6_14
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD003             BEQ.N    ??badapple_5
   \   00000064   0x....             LDR.N    R0,??DataTable6_14
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x.... 0x....      BL       die
    175                    break;
    176            }
    177            //printf("3\n");
    178            //打印出文件内的内容
    179            //printf("打印此文件内容.\n");
    180            while(1)
    181            {
    182              switch(spshu){
   \                     ??badapple_5: (+1)
   \                     ??badapple_3: (+1)
   \   0000006C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD002             BEQ.N    ??badapple_6
   \   00000074   0x2802             CMP      R0,#+2
   \   00000076   0xD017             BEQ.N    ??badapple_7
   \   00000078   0xE02C             B.N      ??badapple_8
    183                case 1:{
    184                  rc = f_read(&fil,buff_86,sizeof(buff_86),&br); // 读取文件的一块
   \                     ??badapple_6: (+1)
   \   0000007A   0x....             LDR.N    R3,??DataTable6_17
   \   0000007C   0xF44F 0x722C      MOV      R2,#+688
   \   00000080   0x....             LDR.N    R1,??DataTable6_18
   \   00000082   0x....             LDR.N    R0,??DataTable6_9
   \   00000084   0x.... 0x....      BL       f_read
   \   00000088   0x....             LDR.N    R1,??DataTable6_14
   \   0000008A   0x7008             STRB     R0,[R1, #+0]
    185                  if (rc || !br) break;     // 错误或读取完毕
   \   0000008C   0x....             LDR.N    R0,??DataTable6_14
   \   0000008E   0x7800             LDRB     R0,[R0, #+0]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD103             BNE.N    ??badapple_9
   \   00000094   0x....             LDR.N    R0,??DataTable6_17
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD100             BNE.N    ??badapple_10
   \                     ??badapple_9: (+1)
   \   0000009C   0xE01A             B.N      ??badapple_8
    186                  LCD_siping(21,86);
   \                     ??badapple_10: (+1)
   \   0000009E   0x2156             MOVS     R1,#+86
   \   000000A0   0x2015             MOVS     R0,#+21
   \   000000A2   0x.... 0x....      BL       LCD_siping
    187                  break;}
   \   000000A6   0xE015             B.N      ??badapple_8
    188                case 2:{
    189                  rc = f_read(&fil,buff_114,sizeof(buff_114),&br); // 读取文件的一块
   \                     ??badapple_7: (+1)
   \   000000A8   0x....             LDR.N    R3,??DataTable6_17
   \   000000AA   0xF44F 0x7264      MOV      R2,#+912
   \   000000AE   0x....             LDR.N    R1,??DataTable6_19
   \   000000B0   0x....             LDR.N    R0,??DataTable6_9
   \   000000B2   0x.... 0x....      BL       f_read
   \   000000B6   0x....             LDR.N    R1,??DataTable6_14
   \   000000B8   0x7008             STRB     R0,[R1, #+0]
    190                  if (rc || !br) break;     // 错误或读取完毕
   \   000000BA   0x....             LDR.N    R0,??DataTable6_14
   \   000000BC   0x7800             LDRB     R0,[R0, #+0]
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xD103             BNE.N    ??badapple_11
   \   000000C2   0x....             LDR.N    R0,??DataTable6_17
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD100             BNE.N    ??badapple_12
   \                     ??badapple_11: (+1)
   \   000000CA   0xE003             B.N      ??badapple_8
    191                  LCD_siping(7,114);
   \                     ??badapple_12: (+1)
   \   000000CC   0x2172             MOVS     R1,#+114
   \   000000CE   0x2007             MOVS     R0,#+7
   \   000000D0   0x.... 0x....      BL       LCD_siping
    192                  break;}
    193              }
    194                  	while(badapple_time);
   \                     ??badapple_8: (+1)
   \   000000D4   0x....             LDR.N    R0,??DataTable6_20
   \   000000D6   0x7800             LDRB     R0,[R0, #+0]
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD1FB             BNE.N    ??badapple_8
    195                    badapple_time=1;
   \   000000DC   0x2001             MOVS     R0,#+1
   \   000000DE   0x....             LDR.N    R1,??DataTable6_20
   \   000000E0   0x7008             STRB     R0,[R1, #+0]
    196                if(gameing==0){
   \   000000E2   0x....             LDR.N    R0,??DataTable6_1
   \   000000E4   0x8800             LDRH     R0,[R0, #+0]
   \   000000E6   0x2800             CMP      R0,#+0
   \   000000E8   0xD1C0             BNE.N    ??badapple_3
    197                  rc = f_close(&fil);
   \   000000EA   0x....             LDR.N    R0,??DataTable6_9
   \   000000EC   0x.... 0x....      BL       f_close
   \   000000F0   0x....             LDR.N    R1,??DataTable6_14
   \   000000F2   0x7008             STRB     R0,[R1, #+0]
    198                  if (rc) die(rc);
   \   000000F4   0x....             LDR.N    R0,??DataTable6_14
   \   000000F6   0x7800             LDRB     R0,[R0, #+0]
   \   000000F8   0x2800             CMP      R0,#+0
   \   000000FA   0xD003             BEQ.N    ??badapple_13
   \   000000FC   0x....             LDR.N    R0,??DataTable6_14
   \   000000FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000100   0x.... 0x....      BL       die
    199                  //printf("\n解除挂载.\n");
    200                  f_mount(0,NULL);
   \                     ??badapple_13: (+1)
   \   00000104   0x2100             MOVS     R1,#+0
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x.... 0x....      BL       f_mount
    201                  return;
   \   0000010C   0xBD10             POP      {R4,PC}          ;; return
    202                }
    203            }
    204            //关闭文件
    205            //printf("\n关闭文件.\n");
    206            rc=f_close(&fil);
    207            if (rc) die(rc);
    208            //printf("\n解除挂载.\n");
    209            f_mount(0,NULL);
    210            if (rc) die(rc);
    211              while(gameing);
    212          }
    213          

   \                                 In section .text, align 2, keep-with-next
    214          void flash_start(void){
   \                     flash_start: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    215            uint8 spshu=1;
   \   00000002   0x2401             MOVS     R4,#+1
    216            LCD_P14x16Ch(105,spshu*2+1,16);
   \   00000004   0x2210             MOVS     R2,#+16
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x0060             LSLS     R0,R4,#+1
   \   0000000A   0x1C41             ADDS     R1,R0,#+1
   \   0000000C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000E   0x2069             MOVS     R0,#+105
   \   00000010   0x.... 0x....      BL       LCD_P14x16Ch
    217            uint8 a=33;
   \   00000014   0x2021             MOVS     R0,#+33
    218            uint8 b=45;
   \   00000016   0x212D             MOVS     R1,#+45
    219            uint8 d=1;
   \   00000018   0x2501             MOVS     R5,#+1
   \   0000001A   0xE011             B.N      ??flash_start_0
    220          while(1){
    221          while(d){
    222            if(gamestart==0)
    223              return;
    224            key();
    225            LCD_P8x16Str(16,0,"Flash Player");
    226            LCD_P8x16Str(20,3,"Bad Apple");
    227            LCD_P8x16Str(20,5,"Garnidelia");
    228            LCD_P14x16Ch(105,spshu*2+1,16);
    229              if(key_up==0){
    230                delay(500);
    231                if(key_up==0){
    232                  spshu--;
    233                  playmusic(2);
    234                  if(spshu==0)
    235                    spshu=2;
    236              LCD_P14x16Ch(105,3,15);
    237              LCD_P14x16Ch(105,5,15);
    238              //LCD_P14x16Ch(105,6,15);
    239              LCD_P14x16Ch(105,spshu*2+1,16);
    240                }while(!key_up){key();}
    241              }
    242              if(key_down==0){
    243                delay(500);
    244                if(key_down==0){
    245                  spshu++;
    246                  playmusic(2);
    247                  if(spshu==3)
    248                    spshu=1;
    249              LCD_P14x16Ch(105,3,15);
    250              LCD_P14x16Ch(105,5,15);
    251              //LCD_P14x16Ch(105,6,15);
    252              LCD_P14x16Ch(105,spshu*2+1,16);
    253                }while(!key_down){key();}
    254              }
    255              if(key_left==0||key_right==0){
    256                delay(500);
    257                if(key_left==0||key_right==0){
    258                  d=0;
    259                }while(!key_left||!key_right){key();}
    260              }
    261            }
    262            LCD_CLS();
   \                     ??flash_start_1: (+1)
   \   0000001C   0x.... 0x....      BL       LCD_CLS
    263            gameing=1;
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x....             LDR.N    R1,??DataTable6_1
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    264            badapple(spshu);
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       badapple
    265            LCD_CLS();
   \   0000002E   0x.... 0x....      BL       LCD_CLS
    266            gamestart=1;d=1;
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x....             LDR.N    R1,??DataTable6
   \   00000036   0x8008             STRH     R0,[R1, #+0]
   \   00000038   0x2501             MOVS     R5,#+1
    267            delay(100);
   \   0000003A   0x2064             MOVS     R0,#+100
   \   0000003C   0x.... 0x....      BL       delay
   \                     ??flash_start_0: (+1)
   \                     ??flash_start_2: (+1)
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x2D00             CMP      R5,#+0
   \   00000044   0xD0EA             BEQ.N    ??flash_start_1
   \   00000046   0x....             LDR.N    R0,??DataTable6
   \   00000048   0x8800             LDRH     R0,[R0, #+0]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD100             BNE.N    ??flash_start_3
   \   0000004E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \                     ??flash_start_3: (+1)
   \   00000050   0x.... 0x....      BL       key
   \   00000054   0x....             LDR.N    R2,??DataTable6_21
   \   00000056   0x2100             MOVS     R1,#+0
   \   00000058   0x2010             MOVS     R0,#+16
   \   0000005A   0x.... 0x....      BL       LCD_P8x16Str
   \   0000005E   0x....             LDR.N    R2,??DataTable6_22
   \   00000060   0x2103             MOVS     R1,#+3
   \   00000062   0x2014             MOVS     R0,#+20
   \   00000064   0x.... 0x....      BL       LCD_P8x16Str
   \   00000068   0x....             LDR.N    R2,??DataTable6_23
   \   0000006A   0x2105             MOVS     R1,#+5
   \   0000006C   0x2014             MOVS     R0,#+20
   \   0000006E   0x.... 0x....      BL       LCD_P8x16Str
   \   00000072   0x2210             MOVS     R2,#+16
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0x0060             LSLS     R0,R4,#+1
   \   00000078   0x1C41             ADDS     R1,R0,#+1
   \   0000007A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000007C   0x2069             MOVS     R0,#+105
   \   0000007E   0x.... 0x....      BL       LCD_P14x16Ch
   \   00000082   0x....             LDR.N    R0,??DataTable6_5
   \   00000084   0x8800             LDRH     R0,[R0, #+0]
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD128             BNE.N    ??flash_start_4
   \   0000008A   0xF44F 0x70FA      MOV      R0,#+500
   \   0000008E   0x.... 0x....      BL       delay
   \   00000092   0x....             LDR.N    R0,??DataTable6_5
   \   00000094   0x8800             LDRH     R0,[R0, #+0]
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD11C             BNE.N    ??flash_start_5
   \   0000009A   0x1E64             SUBS     R4,R4,#+1
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0x.... 0x....      BL       playmusic
   \   000000A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A4   0x2C00             CMP      R4,#+0
   \   000000A6   0xD100             BNE.N    ??flash_start_6
   \   000000A8   0x2402             MOVS     R4,#+2
   \                     ??flash_start_6: (+1)
   \   000000AA   0x220F             MOVS     R2,#+15
   \   000000AC   0x2103             MOVS     R1,#+3
   \   000000AE   0x2069             MOVS     R0,#+105
   \   000000B0   0x.... 0x....      BL       LCD_P14x16Ch
   \   000000B4   0x220F             MOVS     R2,#+15
   \   000000B6   0x2105             MOVS     R1,#+5
   \   000000B8   0x2069             MOVS     R0,#+105
   \   000000BA   0x.... 0x....      BL       LCD_P14x16Ch
   \   000000BE   0x2210             MOVS     R2,#+16
   \   000000C0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C2   0x0060             LSLS     R0,R4,#+1
   \   000000C4   0x1C41             ADDS     R1,R0,#+1
   \   000000C6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C8   0x2069             MOVS     R0,#+105
   \   000000CA   0x.... 0x....      BL       LCD_P14x16Ch
   \   000000CE   0xE001             B.N      ??flash_start_5
   \                     ??flash_start_7: (+1)
   \   000000D0   0x.... 0x....      BL       key
   \                     ??flash_start_5: (+1)
   \   000000D4   0x....             LDR.N    R0,??DataTable6_5
   \   000000D6   0x8800             LDRH     R0,[R0, #+0]
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD0F9             BEQ.N    ??flash_start_7
   \                     ??flash_start_4: (+1)
   \   000000DC   0x....             LDR.N    R0,??DataTable6_6
   \   000000DE   0x8800             LDRH     R0,[R0, #+0]
   \   000000E0   0x2800             CMP      R0,#+0
   \   000000E2   0xD128             BNE.N    ??flash_start_8
   \   000000E4   0xF44F 0x70FA      MOV      R0,#+500
   \   000000E8   0x.... 0x....      BL       delay
   \   000000EC   0x....             LDR.N    R0,??DataTable6_6
   \   000000EE   0x8800             LDRH     R0,[R0, #+0]
   \   000000F0   0x2800             CMP      R0,#+0
   \   000000F2   0xD11C             BNE.N    ??flash_start_9
   \   000000F4   0x1C64             ADDS     R4,R4,#+1
   \   000000F6   0x2002             MOVS     R0,#+2
   \   000000F8   0x.... 0x....      BL       playmusic
   \   000000FC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000FE   0x2C03             CMP      R4,#+3
   \   00000100   0xD100             BNE.N    ??flash_start_10
   \   00000102   0x2401             MOVS     R4,#+1
   \                     ??flash_start_10: (+1)
   \   00000104   0x220F             MOVS     R2,#+15
   \   00000106   0x2103             MOVS     R1,#+3
   \   00000108   0x2069             MOVS     R0,#+105
   \   0000010A   0x.... 0x....      BL       LCD_P14x16Ch
   \   0000010E   0x220F             MOVS     R2,#+15
   \   00000110   0x2105             MOVS     R1,#+5
   \   00000112   0x2069             MOVS     R0,#+105
   \   00000114   0x.... 0x....      BL       LCD_P14x16Ch
   \   00000118   0x2210             MOVS     R2,#+16
   \   0000011A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000011C   0x0060             LSLS     R0,R4,#+1
   \   0000011E   0x1C41             ADDS     R1,R0,#+1
   \   00000120   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000122   0x2069             MOVS     R0,#+105
   \   00000124   0x.... 0x....      BL       LCD_P14x16Ch
   \   00000128   0xE001             B.N      ??flash_start_9
   \                     ??flash_start_11: (+1)
   \   0000012A   0x.... 0x....      BL       key
   \                     ??flash_start_9: (+1)
   \   0000012E   0x....             LDR.N    R0,??DataTable6_6
   \   00000130   0x8800             LDRH     R0,[R0, #+0]
   \   00000132   0x2800             CMP      R0,#+0
   \   00000134   0xD0F9             BEQ.N    ??flash_start_11
   \                     ??flash_start_8: (+1)
   \   00000136   0x....             LDR.N    R0,??DataTable6_24
   \   00000138   0x8800             LDRH     R0,[R0, #+0]
   \   0000013A   0x2800             CMP      R0,#+0
   \   0000013C   0xD004             BEQ.N    ??flash_start_12
   \   0000013E   0x....             LDR.N    R0,??DataTable6_25
   \   00000140   0x8800             LDRH     R0,[R0, #+0]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xF47F 0xAF7C      BNE.W    ??flash_start_2
   \                     ??flash_start_12: (+1)
   \   00000148   0xF44F 0x70FA      MOV      R0,#+500
   \   0000014C   0x.... 0x....      BL       delay
   \   00000150   0x....             LDR.N    R0,??DataTable6_24
   \   00000152   0x8800             LDRH     R0,[R0, #+0]
   \   00000154   0x2800             CMP      R0,#+0
   \   00000156   0xD003             BEQ.N    ??flash_start_13
   \   00000158   0x....             LDR.N    R0,??DataTable6_25
   \   0000015A   0x8800             LDRH     R0,[R0, #+0]
   \   0000015C   0x2800             CMP      R0,#+0
   \   0000015E   0xD103             BNE.N    ??flash_start_14
   \                     ??flash_start_13: (+1)
   \   00000160   0x2500             MOVS     R5,#+0
   \   00000162   0xE001             B.N      ??flash_start_14
   \                     ??flash_start_15: (+1)
   \   00000164   0x.... 0x....      BL       key
   \                     ??flash_start_14: (+1)
   \   00000168   0x....             LDR.N    R0,??DataTable6_24
   \   0000016A   0x8800             LDRH     R0,[R0, #+0]
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD0F9             BEQ.N    ??flash_start_15
   \   00000170   0x....             LDR.N    R0,??DataTable6_25
   \   00000172   0x8800             LDRH     R0,[R0, #+0]
   \   00000174   0x2800             CMP      R0,#+0
   \   00000176   0xF47F 0xAF63      BNE.W    ??flash_start_2
   \   0000017A   0xE7F3             B.N      ??flash_start_15
    268            }
    269          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x3A 0x00          DC8      ":",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x30 0x3A          DC8      0x30, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x4D 0x42          DC8      0x4D, 0x42, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     gamestart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     gameing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     mosixuanzi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     gameover

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     wj_wzq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     key_up

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     key_down

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     fil

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x4D8C0000         DC32     0x4d8c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     fatfs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     fs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     rc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     br

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     buff_86

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     buff_114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x........         DC32     badapple_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x........         DC32     key_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x........         DC32     key_right

   \                                 In section .rodata, align 2
   \   00000000   0x3A 0x00          DC8 ":"

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x53 0x44          DC8 "SD Error!"
   \              0x20 0x45    
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x21 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x43 0x68          DC8 "Check it"
   \              0x65 0x63    
   \              0x6B 0x20    
   \              0x69 0x74    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x30 0x30          DC8 "00000"
   \              0x30 0x30    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x30 0x3A          DC8 "0:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x4D 0x42          DC8 "MB"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x30 0x3A          DC8 "0:/cartoon/badapple.bin"
   \              0x2F 0x63    
   \              0x61 0x72    
   \              0x74 0x6F    
   \              0x6F 0x6E    
   \              0x2F 0x62    
   \              0x61 0x64    
   \              0x61 0x70    
   \              0x70 0x6C    
   \              0x65 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x30 0x3A          DC8 "0:/cartoon/jljt.bin"
   \              0x2F 0x63    
   \              0x61 0x72    
   \              0x74 0x6F    
   \              0x6F 0x6E    
   \              0x2F 0x6A    
   \              0x6C 0x6A    
   \              0x74 0x2E    
   \              0x62 0x69    
   \              0x6E 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x46 0x6C          DC8 "Flash Player"
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x50 0x6C    
   \              0x61 0x79    
   \              0x65 0x72    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x42 0x61          DC8 "Bad Apple"
   \              0x64 0x20    
   \              0x41 0x70    
   \              0x70 0x6C    
   \              0x65 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x47 0x61          DC8 "Garnidelia"
   \              0x72 0x6E    
   \              0x69 0x64    
   \              0x65 0x6C    
   \              0x69 0x61    
   \              0x00         
   \   0000000B   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   badapple
         8   -> LCD_siping
         8   -> die
         8   -> f_close
         8   -> f_mount
         8   -> f_open
         8   -> f_read
       8   die
         8   -> LCD_P8x16Str
         8   -> f_close
         8   -> f_mount
      16   flash_start
        16   -> LCD_CLS
        16   -> LCD_P14x16Ch
        16   -> LCD_P8x16Str
        16   -> badapple
        16   -> delay
        16   -> key
        16   -> playmusic
       0   get_fattime
       8   main
         8   -> LCD_CLS
         8   -> LCD_Init
         8   -> adc_init
         8   -> flash_start
         8   -> init_gpio
         8   -> jianmian
         8   -> pit_init
         8   -> pwm_init
         8   -> saolei
         8   -> start_pic
         8   -> tuixiangzi
         8   -> wuziqi
         8   -> xtjianmian
      24   readsd
        24   -> LCD_P14x16Ch
        24   -> LCD_P8x16Str
        24   -> __aeabi_memcpy
        24   -> die
        24   -> f_close
        24   -> f_getfree
        24   -> f_mount
      16   start_pic
        16   -> LCD_CLS
        16   -> LCD_P14x16Ch
        16   -> LCD_P8x16Str
        16   -> delay
        16   -> key


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       2  ?_0
      12  ?_1
      12  ?_10
      12  ?_2
       8  ?_3
       4  ?_4
       4  ?_5
      24  ?_6
      20  ?_7
      16  ?_8
      12  ?_9
     270  badapple
       1  badapple_time
       4  br
     912  buff_114
     688  buff_86
       4  bw
      46  die
     568  fatfs
     556  fil
       2  flag
       2  flag1
       2  flag2
     380  flash_start
       4  fs
       2  gameing
       2  gameover
       2  gamestart
       6  get_fattime
       2  key_down
       2  key_left
       2  key_right
       2  key_up
     180  main
       2  mosixuanzi
       1  rc
     464  readsd
       2  result
       2  result1
     324  start_pic
       2  time
       2  timeflag
       1  wj_wzq

 
 2 762 bytes in section .bss
     7 bytes in section .data
   126 bytes in section .rodata
 1 786 bytes in section .text
 
 1 786 bytes of CODE  memory
   126 bytes of CONST memory
 2 769 bytes of DATA  memory

Errors: none
Warnings: 6
